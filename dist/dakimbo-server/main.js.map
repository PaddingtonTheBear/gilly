{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/dakimbo-server/src/config.ts","webpack:///./apps/dakimbo-server/src/controllers/authController.ts","webpack:///./apps/dakimbo-server/src/controllers/data/data-transaction.ts","webpack:///./apps/dakimbo-server/src/controllers/data/read.ts","webpack:///./apps/dakimbo-server/src/controllers/dataController.ts","webpack:///./apps/dakimbo-server/src/controllers/metricsController.ts","webpack:///./apps/dakimbo-server/src/controllers/userController.ts","webpack:///./apps/dakimbo-server/src/database/database.ts","webpack:///./apps/dakimbo-server/src/main.ts","webpack:///./apps/dakimbo-server/src/middlewares/checkJwt.ts","webpack:///./apps/dakimbo-server/src/middlewares/checkRole.ts","webpack:///./apps/dakimbo-server/src/routes/auth.ts","webpack:///./apps/dakimbo-server/src/routes/data.ts","webpack:///./apps/dakimbo-server/src/routes/index.ts","webpack:///./apps/dakimbo-server/src/routes/metrics.ts","webpack:///./apps/dakimbo-server/src/routes/user.ts","webpack:///./apps/dakimbo-server/src/utilities/logStamp.ts","webpack:///./libs/entities/_common/picture.ts","webpack:///./libs/entities/_entity-map.ts","webpack:///./libs/entities/_metrics/metric-page-view.ts","webpack:///./libs/entities/_metrics/metric-page-visit.ts","webpack:///./libs/entities/auth/auth-action.ts","webpack:///./libs/entities/auth/auth-entity.ts","webpack:///./libs/entities/auth/auth-role-permission.ts","webpack:///./libs/entities/auth/auth-role.ts","webpack:///./libs/entities/auth/user.ts","webpack:///./libs/entities/base.ts","webpack:///./libs/entities/kid-money/kid.ts","webpack:///./libs/entities/kid-money/km-transaction.ts","webpack:///./libs/utilities/src/lib/auth/checkModelAllowedRoles.ts","webpack:///./libs/utilities/src/lib/auth/checkUserRole.ts","webpack:///external \"bcryptjs\"","webpack:///external \"body-parser\"","webpack:///external \"compression\"","webpack:///external \"cors\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"helmet\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"reflect-metadata\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { entityMap } from '@entities';\r\n\r\nconst isProd = process.env.IS_PROD === 'true';\r\nconst pathToEntities = isProd ? './database/entities/**/*.js' : './database/entities/**/*.ts';\r\nconst pathToMigrations = isProd ? './database/migrations/**/*.js' : './database/migrations/**/*.ts';\r\n\r\nexport default {\r\n\tisProd: isProd,\r\n\r\n\thttpsOpts: {\r\n\t\t// Server SSL private key and certificate\r\n\t\t// key: fs.readFileSync(__dirname + '/security/dev-cert.key'),\r\n\t\t// cert: fs.readFileSync(__dirname + '/security/dev-cert.pem'),\r\n\t\t// issuer/CA certificate against which the client certificate will be\r\n\t\t// validated. A certificate that is not signed by a provided CA will be\r\n\t\t// rejected at the protocol layer.\r\n\t\t// ca: fs.readFileSync(__dirname + '/config/certs/ca-cert.pem'),\r\n\t\t// request a certificate, but don't necessarily reject connections from\r\n\t\t// clients providing an untrusted or no certificate. This lets us protect only\r\n\t\t// certain routes, or send a helpful error message to unauthenticated clients.\r\n\t\t// requestCert: true,\r\n\t\t// rejectUnauthorized: true,\r\n\t},\r\n\r\n\tdbOptions: {\r\n\t\ttype: process.env.DB_TYPE,\r\n\t\thost: process.env.DB_HOST,\r\n\t\tport: process.env.DB_PORT,\r\n\t\tusername: process.env.DB_USER,\r\n\t\tpassword: process.env.DB_PASSWORD,\r\n\t\tdatabase: process.env.DB_DATABASE || 'dakimbo-server',\r\n\t\tsynchronize: true,\r\n\t\tlogging: isProd ? false : false,\r\n\t\tentities: Object.values(entityMap)\r\n\t\t// entities: [path.join(__dirname, pathToEntities)],\r\n\t\t// migrations: [path.join(__dirname, pathToMigrations)],\r\n\t\t// migrationsDir: 'migration'\r\n\t},\r\n\r\n\tjwtSecret: process.env.JWT_SECRET || 'CHANGE_ME'\r\n};\r\n","import { User } from '@entities';\r\nimport { Request, Response } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport { getRepository } from 'typeorm';\r\n\r\nimport config from '../config';\r\nimport UserController from './userController';\r\n\r\nconst loginAttempts = 3;\r\n\r\nclass AuthController {\r\n\tstatic login = async (req: Request, res: Response) => {\r\n\t\t//Check if username and password are set\r\n\t\tlet { username, email, password } = req.body;\r\n\t\tif (!((username || email) && password)) {\r\n\t\t\tres.status(400).send(`You didn't enter a username or password...`);\r\n\t\t\tconsole.log(`LOGIN: Username or Password not found; failed to log in!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Get user from database\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tlet user: User;\r\n\t\ttry {\r\n\t\t\tuser = await userRepository.findOneOrFail({ where: [{ username }, { email }] });\r\n\t\t} catch (error) {\r\n\t\t\tres.status(401).send(\r\n\t\t\t\t'Account was not found, please check your username / e-mail and try again.'\r\n\t\t\t);\r\n\t\t\tconsole.log(`LOGIN: User ${username} not found; failed to log in!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (user.numFailedLogin >= loginAttempts || user.isLocked) {\r\n\t\t\tconst attemptsRemaining = loginAttempts - user.numFailedLogin;\r\n\t\t\tuser.isLocked = user.isLocked || attemptsRemaining <= 0;\r\n\t\t\tawait userRepository.save(user); // increment num failed login counter\r\n\r\n\t\t\tres.status(401).send('Account is locked; please contact an administrator!');\r\n\t\t\tconsole.log(`LOGIN: User ${username} has a locked account.`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Check if encrypted password match\r\n\t\tif (!UserController.checkIfUnencryptedPasswordIsValid(password, user)) {\r\n\t\t\tuser.numFailedLogin++;\r\n\t\t\tconst attemptsRemaining = loginAttempts - user.numFailedLogin;\r\n\t\t\tuser.isLocked = user.isLocked || attemptsRemaining <= 0;\r\n\t\t\tawait userRepository.save(user); // increment num failed login counter\r\n\r\n\t\t\tres.status(401).send(\r\n\t\t\t\t`You entered a wrong username, e-mail or password. ${\r\n\t\t\t\t\tattemptsRemaining > 0\r\n\t\t\t\t\t\t? attemptsRemaining + ' login attempts remaining before account is locked!'\r\n\t\t\t\t\t\t: 'Account is now LOCKED!'\r\n\t\t\t\t} `\r\n\t\t\t);\r\n\t\t\tconsole.log(`LOGIN: User ${user.username} wrong password; failed to log in!`);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Sign JWT, valid for 1 hour\r\n\t\tconst token = jwt.sign(\r\n\t\t\t{\r\n\t\t\t\tuserId: user.id,\r\n\t\t\t\tusername: user.username,\r\n\t\t\t\troles: user.roles.map((r) => {\r\n\t\t\t\t\treturn { role: r.role };\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tconfig.jwtSecret,\r\n\t\t\t{\r\n\t\t\t\texpiresIn: '1h'\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// Delete user pass\r\n\t\tdelete user.password;\r\n\r\n\t\tconsole.log(`LOGIN: User ${user.username} successfully logged in!`);\r\n\t\tuser.numSuccessfulLogin++;\r\n\t\tuser.numFailedLogin = 0;\r\n\t\tuser.lastLoggedInDate = new Date();\r\n\t\tawait userRepository.save(user); // increment num successful login counter\r\n\r\n\t\t//Send the jwt in the response\r\n\t\tres.send(Object.assign({ jwt: token }, user));\r\n\t};\r\n\r\n\tstatic changePassword = async (req: Request, res: Response) => {\r\n\t\t//Get ID from JWT\r\n\t\tconst id = res.locals.jwtPayload.userId;\r\n\r\n\t\t//Get parameters from the body\r\n\t\tconst { oldPassword, newPassword } = req.body;\r\n\t\tif (!(oldPassword && newPassword)) {\r\n\t\t\tres.status(400).send();\r\n\t\t}\r\n\r\n\t\t//Get user from the database\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tlet user: User;\r\n\t\ttry {\r\n\t\t\tuser = await userRepository.findOneOrFail(id);\r\n\t\t} catch (id) {\r\n\t\t\tres.status(401).send();\r\n\t\t}\r\n\r\n\t\t//Check if old password matches\r\n\t\tif (!UserController.checkIfUnencryptedPasswordIsValid(oldPassword, user)) {\r\n\t\t\tres.status(401).send();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Validate the model (password length)\r\n\t\ttry {\r\n\t\t\tuser.password = newPassword;\r\n\t\t\t//Hash the new password and save\r\n\t\t\tUserController.hashPassword(user);\r\n\t\t\tuserRepository.save(user);\r\n\r\n\t\t\tres.status(204).send();\r\n\t\t} catch (e) {\r\n\t\t\tres.status(400).send(e);\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n}\r\nexport default AuthController;\r\n","import { entityMap } from '@entities';\r\nimport { Request, Response } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport { Repository } from 'typeorm';\r\n\r\nimport config from '../../config';\r\nimport { Database } from '../../database/database';\r\nimport { checkModelAllowedRoles } from './../../../../../libs/utilities/src/lib/auth/checkModelAllowedRoles';\r\n\r\nexport class DataTransaction {\r\n\treq: Request;\r\n\tres: Response;\r\n\r\n\tentityName: string;\r\n\tdataObject: any;\r\n\tmodel: any;\r\n\trepo: Repository<any>;\r\n\r\n\tuserJwt: any;\r\n\r\n\tconstructor(req: Request, res: Response) {\r\n\t\tthis.req = req;\r\n\t\tthis.res = res;\r\n\r\n\t\tthis.entityName = this.req.params.entity;\r\n\t\tthis.model = entityMap[this.entityName];\r\n\t\tthis.dataObject = req.body;\r\n\t\tthis.repo = Database._connection.getRepository(this.entityName);\r\n\r\n\t\tthis.userJwt = <any>jwt.verify(<string>this.res.getHeader('token'), config.jwtSecret);\r\n\r\n\t\tif (!this.entityName) {\r\n\t\t\tthis.res.send('You must include the resource name to post this entity to!');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!checkModelAllowedRoles(this.model, this.userJwt)) {\r\n\t\t\tthis.res.status(403).send('You are not allowed to transaction this entity!');\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tasync performTransaction() {\r\n\t\tif (['POST', 'PATCH', 'PUT'].includes(this.req.method)) {\r\n\t\t\tawait this.executeSave();\r\n\t\t} else if (this.req.method === 'DELETE') {\r\n\t\t\tawait this.executeDelete();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async executeSave() {\r\n\t\tconst isArray = Array.isArray(this.dataObject);\r\n\r\n\t\tif (isArray) {\r\n\t\t\tthis.dataObject.forEach((d) => this.setEntityUser(d));\r\n\t\t} else {\r\n\t\t\tthis.setEntityUser(this.dataObject);\r\n\t\t\tif (!this.dataObject.id && this.req.params.id) this.dataObject.id = this.req.params.id;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tif (this.model.preProcess) {\r\n\t\t\t\tif (isArray) {\r\n\t\t\t\t\tconst preProcessPromises = [];\r\n\t\t\t\t\tthis.dataObject.forEach((o) =>\r\n\t\t\t\t\t\tpreProcessPromises.push(this.model.preProcess(o))\r\n\t\t\t\t\t);\r\n\t\t\t\t\tawait Promise.all(preProcessPromises);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tawait this.model.preProcess(this.dataObject);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet savedEntity = await this.repo.save(this.dataObject);\r\n\r\n\t\t\tif (this.model.postProcess) {\r\n\t\t\t\tif (isArray) {\r\n\t\t\t\t\tconst postProcessPromises = [];\r\n\t\t\t\t\tthis.dataObject.forEach((o) =>\r\n\t\t\t\t\t\tpostProcessPromises.push(this.model.postProcess(o))\r\n\t\t\t\t\t);\r\n\t\t\t\t\tawait Promise.all(postProcessPromises);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tawait this.model.postProcess(this.dataObject);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.model.loadAfterCreate) {\r\n\t\t\t\tsavedEntity = await this.repo.findOne(this.dataObject.id);\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`${this.req.method}: ${this.entityName} | ${\r\n\t\t\t\t\tisArray ? 'Length: ' + savedEntity.length : savedEntity.id\r\n\t\t\t\t} | USER: ${this.userJwt.username}`\r\n\t\t\t);\r\n\r\n\t\t\tthis.res.send(savedEntity);\r\n\t\t} catch (e) {\r\n\t\t\tthis.res.status(500).send(e);\r\n\t\t\tconsole.error(\r\n\t\t\t\t`${this.req.method} FAILED: ${this.entityName} | USER: ${this.userJwt.username}`\r\n\t\t\t);\r\n\t\t\tconsole.error(`ERROR: `, e);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async executeDelete() {\r\n\t\tconst idToDelete = this.req.params.id;\r\n\t\tconst isArray = Array.isArray(this.dataObject);\r\n\r\n\t\ttry {\r\n\t\t\tawait this.repo.delete(isArray ? this.dataObject : idToDelete);\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`DELETE: ${this.entityName} | ${\r\n\t\t\t\t\tisArray ? 'Length: ' + this.dataObject.length : idToDelete\r\n\t\t\t\t} | USER: ${this.userJwt.username}`\r\n\t\t\t);\r\n\r\n\t\t\tthis.res.send({\r\n\t\t\t\tid: idToDelete\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tthis.res.status(500).send(e);\r\n\t\t\tconsole.error(\r\n\t\t\t\t`DELETE FAILED: ${this.entityName} | ${idToDelete} | USER: ${this.userJwt.username}`\r\n\t\t\t);\r\n\t\t\tconsole.error(`ERROR: `, e);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate setEntityUser(entity) {\r\n\t\tentity.modifyUser = this.userJwt.username;\r\n\t\tif (this.req.method === 'POST') {\r\n\t\t\tentity.createUser = this.userJwt.username;\r\n\t\t}\r\n\t}\r\n}\r\n","import { entityMap } from '@entities';\r\nimport { Request, Response } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport { getManager, IsNull, Repository } from 'typeorm';\r\n\r\nimport { checkModelAllowedRoles } from '../../../../../libs/utilities/src/lib/auth/checkModelAllowedRoles';\r\nimport config from '../../config';\r\nimport { Database } from '../../database/database';\r\n\r\nexport const readData = async (req: Request, res: Response) => {\r\n\tconst entityName = req.params.entity;\r\n\tif (!entityName) {\r\n\t\tres.send('You must include the resource name to get these entities from!');\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst userJwt = <any>jwt.verify(<string>res.getHeader('token'), config.jwtSecret);\r\n\r\n\tconst model = entityMap[entityName];\r\n\r\n\tif (!checkModelAllowedRoles(model, userJwt)) {\r\n\t\tthis.res.status(403).send('You are not allowed to transaction this entity!');\r\n\t\treturn;\r\n\t}\r\n\r\n\ttry {\r\n\t\tlet repo = Database._connection.getRepository(entityName);\r\n\t\tlet entities = [];\r\n\t\tlet findOptions: any = {};\r\n\t\tlet useDefaultRepo = false;\r\n\t\tconst queries = Object.keys(req.query);\r\n\r\n\t\tif (queries && queries.length) {\r\n\t\t\tlet query = {};\r\n\t\t\tlet attrs = [];\r\n\t\t\tfor (let i = 0, len = queries.length; i < len; i++) {\r\n\t\t\t\tconst key = queries[i];\r\n\t\t\t\tconst value = <any>req.query[key];\r\n\r\n\t\t\t\tif (key === 'useDefaultRepo') {\r\n\t\t\t\t\tuseDefaultRepo = true;\r\n\t\t\t\t} else if (key === 'attrs') {\r\n\t\t\t\t\tattrs = value.split(',');\r\n\t\t\t\t} else if (key.indexOf('.') >= 0) {\r\n\t\t\t\t\tconst splitProp = key.split('.');\r\n\t\t\t\t\tconst prop = splitProp[0],\r\n\t\t\t\t\t\tsubProp = splitProp[1];\r\n\t\t\t\t\tquery[prop] = {};\r\n\t\t\t\t\tquery[prop][subProp] = transformQueryValue(value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tquery[key] = transformQueryValue(value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfindOptions = {};\r\n\t\t\tif (query) {\r\n\t\t\t\tfindOptions.where = query;\r\n\t\t\t}\r\n\t\t\tif (attrs && attrs.length) {\r\n\t\t\t\tfindOptions.select = attrs;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (model.repoType && !useDefaultRepo) {\r\n\t\t\tconst manager = getManager();\r\n\t\t\tswitch (model.repoType) {\r\n\t\t\t\tcase 'tree':\r\n\t\t\t\t\tentities = await manager.getTreeRepository(entityName).findTrees();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tentities = await repo.find(findOptions);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tentities = await repo.find(findOptions);\r\n\t\t}\r\n\r\n\t\tif (model && model.relationships && model.relationships.length) {\r\n\t\t\tawait loadRelationships(entityName, repo, model.relationships, entities);\r\n\t\t}\r\n\r\n\t\tremoveIgnoredAttrs(entities);\r\n\r\n\t\tconsole.log(\r\n\t\t\t`GET: ${entityName}${\r\n\t\t\t\tObject.keys(req.query).length ? ' ' + JSON.stringify(req.query) : ''\r\n\t\t\t} | Returned ${entities.length} entities! USER: ${userJwt.username}`\r\n\t\t);\r\n\r\n\t\tres.send(entities);\r\n\t} catch (e) {\r\n\t\tres.status(500).send(e);\r\n\t\tconsole.error(\r\n\t\t\t`GET FAILED: ${entityName} ${JSON.stringify(req.query)} | USER: ${userJwt.username}`\r\n\t\t);\r\n\t\tconsole.error(`ERROR: `, e);\r\n\t}\r\n};\r\n\r\nconst transformQueryValue = (value: string) => {\r\n\tconst lowerValue = value.toLowerCase();\r\n\tif (lowerValue === 'null') {\r\n\t\treturn IsNull();\r\n\t} else {\r\n\t\treturn value;\r\n\t}\r\n};\r\n\r\nconst removeIgnoredAttrs = (entities: any[]) => {\r\n\tif (!entities) return;\r\n\tconst ignoreAttrs = ['relationships', 'loadAfterCreate'];\r\n\t(entities instanceof Array ? entities : [entities]).forEach((e) =>\r\n\t\tignoreAttrs.forEach((attr) => delete e[attr])\r\n\t);\r\n};\r\n\r\nconst loadRelationships = async (\r\n\tentityName: string,\r\n\trepo: Repository<any>,\r\n\trelationships: any[],\r\n\tbaseEntities?: any[],\r\n\tignoreSubRelations?: boolean\r\n) => {\r\n\tif (!baseEntities || !baseEntities.length) return;\r\n\r\n\t// Wait for all sub finds to complete and spread them into a res object\r\n\tconst { ...res } = await Promise.all(\r\n\t\trelationships.map((relation) => {\r\n\t\t\tconst manager = getManager();\r\n\t\t\tif (relation.model && relation.model.repoType && !relation.useDefaultRepo) {\r\n\t\t\t\tswitch (relation.model.repoType) {\r\n\t\t\t\t\tcase 'tree':\r\n\t\t\t\t\t\treturn manager.getTreeRepository(entityName).findTrees();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn repo.findByIds(\r\n\t\t\t\t\t\t\tbaseEntities.map((entity) => {\r\n\t\t\t\t\t\t\t\tif (!entity || !entity.id) return;\r\n\t\t\t\t\t\t\t\treturn entity.id;\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tselect: ['id'],\r\n\t\t\t\t\t\t\t\trelations: [relation.name]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn repo.findByIds(\r\n\t\t\t\t\tbaseEntities.map((entity) => {\r\n\t\t\t\t\t\tif (!entity || !entity.id) return;\r\n\t\t\t\t\t\treturn entity.id;\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tselect: ['id'],\r\n\t\t\t\t\t\trelations: [relation.name]\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t})\r\n\t);\r\n\r\n\t// Loop over every sub find result, find the \"full entity\" we're trying to build from our base entities,\r\n\t// and attach the corresponding related entites to it (not a \"pure\" function)\r\n\tconst subRelationshipPromises = [];\r\n\r\n\tfor (const i of Object.keys(res)) {\r\n\t\tfor (const r of res[i]) {\r\n\t\t\tconst fullEntity = baseEntities.find((e) => e.id === r.id);\r\n\t\t\tif (fullEntity) {\r\n\t\t\t\tconst relationName = relationships[i].name;\r\n\t\t\t\tconst relationObject = r[relationName];\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\trelationships[i].model &&\r\n\t\t\t\t\trelationships[i].model.relationships &&\r\n\t\t\t\t\t!ignoreSubRelations\r\n\t\t\t\t) {\r\n\t\t\t\t\tconst subRepo = Database._connection.getRepository(\r\n\t\t\t\t\t\trelationships[i].model.displayName\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst subRelationships = relationships[i].model.relationships;\r\n\t\t\t\t\tsubRelationshipPromises.push(\r\n\t\t\t\t\t\tloadRelationships(\r\n\t\t\t\t\t\t\tentityName,\r\n\t\t\t\t\t\t\tsubRepo,\r\n\t\t\t\t\t\t\tsubRelationships,\r\n\t\t\t\t\t\t\trelationObject instanceof Array ? relationObject : [relationObject],\r\n\t\t\t\t\t\t\trelationships[i].ignoreSubRelations\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tremoveIgnoredAttrs(relationObject);\r\n\t\t\t\tremoveIgnoredAttrs(fullEntity);\r\n\t\t\t\tfullEntity[relationName] = relationObject;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tawait Promise.all(subRelationshipPromises);\r\n};\r\n","import { Request, Response } from 'express';\r\n\r\nimport { readData } from './data/read';\r\nimport { DataTransaction } from './data/data-transaction';\r\n\r\nclass DataController {\r\n\tstatic get = readData;\r\n\r\n\tstatic create = async (req: Request, res: Response) => {\r\n\t\tawait new DataTransaction(req, res).performTransaction();\r\n\t};\r\n\r\n\tstatic update = async (req: Request, res: Response) => {\r\n\t\tawait new DataTransaction(req, res).performTransaction();\r\n\t};\r\n\r\n\tstatic delete = async (req: Request, res: Response) => {\r\n\t\tawait new DataTransaction(req, res).performTransaction();\r\n\t};\r\n}\r\nexport default DataController;\r\n","import { Request, Response } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\n\r\nimport config from '../config';\r\nimport { Database } from './../database/database';\r\n\r\nclass MetricsController {\r\n\tstatic getMetricsFor = async (req: Request, res: Response) => {\r\n\t\tconst { username } = <any>jwt.verify(<string>res.getHeader('token'), config.jwtSecret);\r\n\r\n\t\tconst metricToFind = req.params.metricName;\r\n\r\n\t\ttry {\r\n\t\t\tconst metricRepo = Database._connection.getRepository(metricToFind);\r\n\t\t\tconst metrics = await metricRepo.find();\r\n\t\t\tconsole.log(\r\n\t\t\t\t`METRICS FETCHED: ${metricToFind} --- FOUND: ${metrics.length} | USER: ${username}`\r\n\t\t\t);\r\n\t\t\tres.send(metrics);\r\n\t\t} catch (error) {\r\n\t\t\tres.status(500).send(error);\r\n\t\t\tconsole.log(`FAILED: Metrics fetch for ${metricToFind}`);\r\n\t\t}\r\n\t};\r\n}\r\nexport default MetricsController;\r\n","import { User } from '@entities';\r\nimport * as bcrypt from 'bcryptjs';\r\nimport { Request, Response } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport { getRepository } from 'typeorm';\r\n\r\nimport config from '../config';\r\n\r\nclass UserController {\r\n\tstatic listAll = async (req: Request, res: Response) => {\r\n\t\t//Get users from database\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tconst users = await userRepository.find();\r\n\r\n\t\tusers.forEach((user) => {\r\n\t\t\tdelete user.password;\r\n\t\t});\r\n\r\n\t\t//Send the users object\r\n\t\tres.send(users);\r\n\t};\r\n\r\n\tstatic getOneById = async (req: Request, res: Response) => {\r\n\t\t//Get the ID from the url\r\n\t\tconst id: string = req.params.id;\r\n\r\n\t\t//Get the user from database\r\n\t\tconst userRepository = getRepository(User);\r\n\t\ttry {\r\n\t\t\tconst user = await userRepository.findOneOrFail(id);\r\n\r\n\t\t\tdelete user.password;\r\n\r\n\t\t\tres.status(201).send(user);\r\n\t\t} catch (error) {\r\n\t\t\tres.status(404).send('User not found');\r\n\t\t}\r\n\t};\r\n\r\n\tstatic newUser = async (req: Request, res: Response) => {\r\n\t\t//Get parameters from the body\r\n\t\tlet { username, password, email, roles } = req.body;\r\n\t\tlet user = new User();\r\n\t\tuser.username = username;\r\n\t\tuser.password = password;\r\n\t\tuser.email = email;\r\n\t\tuser.roles = roles;\r\n\r\n\t\t// const { adminUser } = <any>jwt.verify(<string>res.getHeader('token'), config.jwtSecret);\r\n\r\n\t\t//Hash the password, to securely store on DB\r\n\t\tUserController.hashPassword(user);\r\n\r\n\t\t//Try to save. If fails, the username is already in use\r\n\t\tconst userRepository = getRepository(User);\r\n\t\ttry {\r\n\t\t\tawait userRepository.save(user);\r\n\t\t} catch (e) {\r\n\t\t\tres.status(409).send('Username already in use!');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdelete user.password;\r\n\r\n\t\t//If all ok, send 201 response\r\n\t\tconsole.log(`CREATE USER: ${user.username}`);\r\n\t\tres.status(201).send(user);\r\n\t};\r\n\r\n\tstatic editUser = async (req: Request, res: Response) => {\r\n\t\t//Get the ID from the url\r\n\t\tconst id = req.params.id;\r\n\r\n\t\t//Get values from the body\r\n\t\tconst { username, password, roles, email, isLocked, numFailedLogin } = req.body;\r\n\r\n\t\tconst { adminUser } = <any>jwt.verify(<string>res.getHeader('token'), config.jwtSecret);\r\n\r\n\t\t//Try to find user on database\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tlet user;\r\n\t\ttry {\r\n\t\t\tuser = await userRepository.findOneOrFail(id);\r\n\t\t} catch (error) {\r\n\t\t\t//If not found, send a 404 response\r\n\t\t\tres.status(404).send('User not found');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Validate the new values on model\r\n\t\tuser.username = username;\r\n\t\tuser.roles = roles;\r\n\t\tuser.email = email;\r\n\t\tuser.isLocked = isLocked;\r\n\t\tuser.numFailedLogin = numFailedLogin;\r\n\r\n\t\tif (password) {\r\n\t\t\tuser.password = password;\r\n\t\t\tUserController.hashPassword(user);\r\n\t\t}\r\n\r\n\t\t//Try to save, if fails, that means username already in use\r\n\t\ttry {\r\n\t\t\tawait userRepository.save(user);\r\n\t\t} catch (e) {\r\n\t\t\tres.status(409).send('username already in use');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//After all send a 204 (no content, but accepted) response\r\n\t\tconsole.log(`EDIT USER: ${user.username} | BY ADMIN: ${adminUser}`);\r\n\t\tres.status(204).send();\r\n\t};\r\n\r\n\tstatic deleteUser = async (req: Request, res: Response) => {\r\n\t\t//Get the ID from the url\r\n\t\tconst id = req.params.id;\r\n\r\n\t\tconst { adminUser } = <any>jwt.verify(<string>res.getHeader('token'), config.jwtSecret);\r\n\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tlet user: User;\r\n\t\ttry {\r\n\t\t\tuser = await userRepository.findOneOrFail(id);\r\n\t\t} catch (error) {\r\n\t\t\tres.status(404).send('User not found');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tuserRepository.delete(id);\r\n\r\n\t\t//After all send a 204 (no content, but accepted) response\r\n\t\tconsole.log(`DELETE USER: ${user.username} | BY ADMIN: ${adminUser}`);\r\n\t\tres.status(204).send();\r\n\t};\r\n\r\n\tstatic getCurrentUser = async (req: Request, res: Response) => {\r\n\t\t// Get the jwt token from the head\r\n\t\tconst authHeader = <string>req.headers['authorization'];\r\n\t\tif (!authHeader || !authHeader.includes('Bearer')) {\r\n\t\t\tres.status(408).send('No Authorization Header or Bearer token presented!');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst token = authHeader.split('Bearer')[1].trim();\r\n\t\tlet jwtPayload;\r\n\r\n\t\t// Try to validate the token and get data\r\n\t\ttry {\r\n\t\t\tjwtPayload = <any>jwt.verify(token, config.jwtSecret);\r\n\t\t\tres.locals.jwtPayload = jwtPayload;\r\n\t\t} catch (error) {\r\n\t\t\t// If token is not valid, respond with 401 (unauthorized)\r\n\t\t\tres.status(401).send();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// The token is valid for 1 hour\r\n\t\t// We want to send a new token on every request\r\n\t\tconst { userId, username } = jwtPayload;\r\n\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tlet user: User;\r\n\t\ttry {\r\n\t\t\tuser = await userRepository.findOneOrFail(userId);\r\n\t\t} catch (error) {\r\n\t\t\tres.status(404).send('User not found');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdelete user.password;\r\n\r\n\t\tres.status(201).send(user);\r\n\t};\r\n\r\n\tstatic hashPassword(userEntity: User) {\r\n\t\tuserEntity.password = bcrypt.hashSync(userEntity.password, 8);\r\n\t}\r\n\r\n\tstatic checkIfUnencryptedPasswordIsValid(unencryptedPassword: string, userEntity: User) {\r\n\t\treturn bcrypt.compareSync(unencryptedPassword, userEntity.password);\r\n\t}\r\n}\r\n\r\nexport default UserController;\r\n","import { Connection, ConnectionOptions, createConnection } from 'typeorm';\r\n\r\nexport class Database {\r\n\tstatic _connection: Connection;\r\n\tstatic _dbOptions: ConnectionOptions | any;\r\n\r\n\tconstructor() {}\r\n\r\n\tasync connect(dbOptions: ConnectionOptions) {\r\n\t\tDatabase._dbOptions = dbOptions;\r\n\t\ttry {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Connecting to ${Database._dbOptions.type} Database: ${Database._dbOptions.database} at ${Database._dbOptions.host}:${Database._dbOptions.port} with user: ${Database._dbOptions.username}`\r\n\t\t\t);\r\n\t\t\tDatabase._connection = await createConnection(Database._dbOptions);\r\n\r\n\t\t\tawait this.runMigrations();\r\n\r\n\t\t\tconsole.log(`Connection to database established!`);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Error Connecting to ${Database._dbOptions.host}:${Database._dbOptions.port}\\n`,\r\n\t\t\t\te\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tasync runMigrations() {\r\n\t\tconst migrations = [];\r\n\t\tif (migrations.length) {\r\n\t\t\tconsole.log(`Running migrations...`);\r\n\t\t\tawait Promise.all(migrations);\r\n\t\t\tconsole.log(`Migrations finished!`);\r\n\t\t}\r\n\t}\r\n}\r\n","require('./utilities/logStamp');\nrequire('dotenv').config();\n\nimport 'reflect-metadata';\n\nimport bodyParser from 'body-parser';\nimport compression from 'compression';\nimport cors from 'cors';\nimport express from 'express';\nimport helmet from 'helmet';\n\nimport { Database } from './database/database';\nimport routes from './routes';\nimport config from './config';\n\n(async () => {\n\tconst db = new Database();\n\tawait db.connect(<any>config.dbOptions);\n\n\tconst app = express();\n\tconst port = process.env.port || 1337;\n\n\t// MIDDLEWARE\n\tapp.use(cors());\n\tapp.use(helmet());\n\tapp.use(compression());\n\tapp.use(bodyParser.urlencoded({ extended: false }));\n\tapp.use(bodyParser.json());\n\n\tapp.use(express.static(__dirname + '/public'));\n\tapp.use('/', routes);\n\tapp.get('*', (req, res) => {\n\t\tres.sendFile(__dirname + '/public/index.html');\n\t});\n\n\tconst server = app.listen(port, () => {\n\t\treturn console.log(`Server is listening on ${port}`);\n\t});\n\tserver.on('error', console.error);\n})();\n","import { Request, Response, NextFunction } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport config from '../config';\r\n\r\nexport const checkJwt = (req: Request, res: Response, next: NextFunction) => {\r\n\t// Get the jwt token from the head\r\n\tconst authHeader = <string>req.headers['authorization'];\r\n\tif (!authHeader || !authHeader.includes('Bearer')) {\r\n\t\tres.status(408).send('No Authorization Header or Bearer token presented!');\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst token = authHeader.split('Bearer')[1].trim();\r\n\tlet jwtPayload;\r\n\r\n\t// Try to validate the token and get data\r\n\ttry {\r\n\t\tjwtPayload = <any>jwt.verify(token, config.jwtSecret);\r\n\t\tres.locals.jwtPayload = jwtPayload;\r\n\t} catch (error) {\r\n\t\t// If token is not valid, respond with 401 (unauthorized)\r\n\t\tres.status(401).send();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// The token is valid for 1 hour\r\n\t// We want to send a new token on every request\r\n\tconst { userId, username, roles } = jwtPayload;\r\n\tconst newToken = jwt.sign({ userId, username, roles }, config.jwtSecret, {\r\n\t\texpiresIn: '1h'\r\n\t});\r\n\tres.setHeader('token', newToken);\r\n\r\n\t// Call the next middleware or controller\r\n\tnext();\r\n};\r\n","import { User } from '@entities';\r\nimport { NextFunction, Request, Response } from 'express';\r\nimport { getRepository } from 'typeorm';\r\n\r\nimport { checkUserRole } from './../../../../libs/utilities/src/lib/auth/checkUserRole';\r\n\r\nexport const checkRole = (roles: Array<string>) => {\r\n\treturn async (req: Request, res: Response, next: NextFunction) => {\r\n\t\t// Get the user ID from previous midleware\r\n\t\tconst id = res.locals.jwtPayload.userId;\r\n\r\n\t\t// Get user role from the database\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tlet user: User;\r\n\t\ttry {\r\n\t\t\tuser = await userRepository.findOneOrFail(id);\r\n\t\t} catch (id) {\r\n\t\t\tres.status(401).send();\r\n\t\t}\r\n\r\n\t\t// Check if array of authorized roles includes the user's role\r\n\t\tif (checkUserRole(user, roles)) next();\r\n\t\telse res.status(401).send();\r\n\t};\r\n};\r\n","import { Router } from 'express';\nimport AuthController from '../controllers/authController';\nimport { checkJwt } from '../middlewares/checkJwt';\n\nconst router = Router();\n\n//Login route\nrouter.post('/login', AuthController.login);\n\n//Change my password\nrouter.post('/change-password', [checkJwt], AuthController.changePassword);\n\nexport default router;\n","import { Router } from 'express';\r\nimport { checkJwt } from '../middlewares/checkJwt';\r\nimport { checkRole } from '../middlewares/checkRole';\r\nimport DataController from '../controllers/dataController';\r\nimport config from '../config';\r\n\r\nconst router = Router();\r\n\r\nif (config.isProd) {\r\n\trouter.get('/:entity', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.get);\r\n\r\n\trouter.post('/:entity', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.create);\r\n\r\n\trouter.patch('/:entity/:id', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.update);\r\n\r\n\trouter.put('/:entity/:id', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.update);\r\n\r\n\trouter.delete('/:entity/:id', [checkJwt, checkRole(['superamdin', 'admin'])], DataController.delete);\r\n} else {\r\n\trouter.get('/:entity', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.get);\r\n\r\n\trouter.post('/:entity', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.create);\r\n\r\n\trouter.patch('/:entity/:id', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.update);\r\n\r\n\trouter.put('/:entity/:id', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.update);\r\n\r\n\trouter.delete('/:entity/:id', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.delete);\r\n}\r\n\r\nexport default router;\r\n","import { Router } from 'express';\r\nimport auth from './auth';\r\nimport user from './user';\r\nimport data from './data';\r\nimport metrics from './metrics';\r\n\r\nconst routes = Router();\r\n\r\nroutes.use('/auth', auth);\r\nroutes.use('/user', user);\r\nroutes.use('/data', data);\r\nroutes.use('/metrics', metrics);\r\n\r\nexport default routes;","import { Router } from 'express';\r\nimport { checkJwt } from '../middlewares/checkJwt';\r\nimport { checkRole } from '../middlewares/checkRole';\r\nimport MetricsController from '../controllers/metricsController';\r\n\r\nconst router = Router();\r\n\r\n// Get specific metric\r\nrouter.get('/:metricName', [checkJwt, checkRole(['superadmin'])], MetricsController.getMetricsFor);\r\n\r\nexport default router;","import { Router } from 'express';\nimport UserController from '../controllers/userController';\nimport { checkJwt } from '../middlewares/checkJwt';\nimport { checkRole } from '../middlewares/checkRole';\n\nconst router = Router();\n\n//Get all users\nrouter.get('/', [checkJwt, checkRole(['admin'])], UserController.listAll);\n\n// Get one user\nrouter.get('/:id([0-9]+)', [checkJwt, checkRole(['admin'])], UserController.getOneById);\n\n//Create a new user\nrouter.post('/', UserController.newUser);\n\n//Edit one user\nrouter.patch('/:id([0-9]+)', [checkJwt, checkRole(['admin'])], UserController.editUser);\n\n//Delete one user\nrouter.delete('/:id([0-9]+)', [checkJwt, checkRole(['admin'])], UserController.deleteUser);\n\n// Current User\nrouter.get('/me', [checkJwt], UserController.getCurrentUser);\n\nexport default router;\n","const log = console.log;\nconsole.log = function() {\n\tconst firstParameter = arguments[0];\n\tconst otherParameters = Array.prototype.slice.call(arguments, 1);\n\tlog.apply(console, [`${dateFormat()} ${firstParameter}`.concat(otherParameters)]);\n};\n\nconst error = console.error;\nconsole.error = function() {\n\tconst firstParameter = arguments[0];\n\tconst otherParameters = Array.prototype.slice.call(arguments, 1);\n\terror.apply(console, [`${dateFormat()} ${firstParameter}`.concat(otherParameters)]);\n};\n\nconst dateFormat = () => {\n\treturn `[\\x1b[34m${new Date().toISOString()}\\x1b[0m]`;\n};\n","import { Column, Entity, ManyToOne } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { Kid } from '../kid-money/kid';\r\nimport { KMTransaction } from '../kid-money/km-transaction';\r\n\r\n@Entity()\r\nexport class Picture extends BaseModel {\r\n\t@Column({ nullable: true })\r\n\tlocation?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tname: string;\r\n\r\n\t@Column({ nullable: true })\r\n\textension?: string;\r\n\r\n\t@Column({ type: 'bytea' })\r\n\tdata?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tlastModifiedDate?: Date;\r\n\r\n\t@Column({ nullable: true })\r\n\tsize: number;\r\n\r\n\t// RELATIONSHIPS\r\n\t@ManyToOne((type) => Kid, (kid) => kid.pictures)\r\n\tkid: Kid;\r\n\r\n\t@ManyToOne((type) => KMTransaction, (kmTransaction) => kmTransaction.pictures)\r\n\tkmTransaction: KMTransaction;\r\n\r\n\tstatic async preProcess?(entity, dbConnection) {\r\n\t\tif (entity.name) {\r\n\t\t\tentity.extension = entity.name.split('.')[1];\r\n\t\t}\r\n\t}\r\n\r\n\t// @Column('bytea', { nullable: false, name: 'Content' })\r\n\t// contentHex?: string;\r\n\r\n\t// private _Content: Buffer | undefined;\r\n\r\n\t// get Content(): Buffer {\r\n\t// \tif (!this._Content) this._Content = new Buffer(this.contentHex, 'hex');\r\n\t// \treturn this._Content;\r\n\t// }\r\n}\r\n","import { Picture } from './_common/picture';\r\nimport { MetricPageView } from './_metrics/metric-page-view';\r\nimport { MetricPageVisit } from './_metrics/metric-page-visit';\r\nimport { AuthAction } from './auth/auth-action';\r\nimport { AuthEntity } from './auth/auth-entity';\r\nimport { AuthRole } from './auth/auth-role';\r\nimport { AuthRolePermission } from './auth/auth-role-permission';\r\nimport { User } from './auth/user';\r\nimport { Kid } from './kid-money/kid';\r\nimport { KMTransaction } from './kid-money/km-transaction';\r\n\r\nexport const entityMap = {\r\n\t// AUTH\r\n\tUser,\r\n\tAuthRole,\r\n\tAuthAction,\r\n\tAuthEntity,\r\n\tAuthRolePermission,\r\n\r\n\t// METRICS\r\n\tMetricPageView,\r\n\tMetricPageVisit,\r\n\r\n\t// COMMON\r\n\tPicture,\r\n\r\n\t// KID MONEY\r\n\tKid,\r\n\tKMTransaction\r\n};\r\n\r\nexport { User } from './auth/user';\r\nexport { AuthAction } from './auth/auth-action';\r\nexport { AuthEntity } from './auth/auth-entity';\r\nexport { AuthRole } from './auth/auth-role';\r\nexport { AuthRolePermission } from './auth/auth-role-permission';\r\nexport { MetricPageView } from './_metrics/metric-page-view';\r\nexport { MetricPageVisit } from './_metrics/metric-page-visit';\r\nexport { Picture } from './_common/picture';\r\nexport { Kid } from './kid-money/kid';\r\nexport { KMTransaction } from './kid-money/km-transaction';\r\n","import { Column, Entity } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\n\r\n@Entity({\r\n\tname: '__metric_page_view',\r\n\torderBy: {\r\n\t\tpageName: 'ASC'\r\n\t}\r\n})\r\nexport class MetricPageView extends BaseModel {\r\n\tstatic displayName = 'MetricPageView';\r\n\t\r\n\tconstructor(props?: MetricPageView) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\t@Column({ nullable: true }) pageName: string;\r\n\r\n\t@Column({ nullable: true, default: 1 }) viewCount: number;\r\n\r\n\t@Column({ nullable: true }) appName: string;\r\n}\r\n","import { Column, Entity } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { Database } from './../../../apps/dakimbo-server/src/database/database';\r\nimport { EntityTransaction } from './../base';\r\n\r\n@Entity({\r\n\tname: '__metric_page_visit',\r\n\torderBy: {\r\n\t\tcreateDate: 'DESC'\r\n\t}\r\n})\r\nexport class MetricPageVisit extends BaseModel implements EntityTransaction {\r\n\tstatic displayName = 'MetricPageVisit';\r\n\r\n\tconstructor(props?: MetricPageVisit) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\t@Column({ nullable: true }) pageName: string;\r\n\r\n\t@Column({ nullable: true }) appName: string;\r\n\r\n\tstatic async preProcess(entity) {\r\n\t\t// Check if there is already an entry for this metric in the DB for views;\r\n\t\t// if there is, then increment the page count, otherwise start a new one\r\n\t\tconst repo = Database._connection.getRepository('MetricPageView');\r\n\t\tconst existingPageViewMetric: any = await repo.findOne({\r\n\t\t\twhere: { appName: entity.appName, pageName: entity.pageName }\r\n\t\t});\r\n\t\tif (!existingPageViewMetric) {\r\n\t\t\tawait repo.save({\r\n\t\t\t\tpageName: entity.pageName,\r\n\t\t\t\tappName: entity.appName,\r\n\t\t\t\tviewCount: 1\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\texistingPageViewMetric.viewCount++;\r\n\t\t\tawait repo.save(existingPageViewMetric);\r\n\t\t}\r\n\t}\r\n}\r\n","import { Column, Entity, OneToMany, Tree, TreeChildren, TreeParent } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { AuthRolePermission } from './auth-role-permission';\r\n\r\n@Entity({\r\n\tname: 'auth_action',\r\n\torderBy: {\r\n\t\taction: 'ASC'\r\n\t}\r\n})\r\n@Tree('nested-set')\r\nexport class AuthAction extends BaseModel {\r\n\tstatic displayName = 'AuthAction';\r\n\tstatic repoType = 'tree';\r\n\r\n\t@Column({ nullable: true })\r\n\taction?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\ttype?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tapplication?: string;\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tisFolder?: boolean;\r\n\r\n\t@OneToMany((type) => AuthRolePermission, (authRolePermission) => authRolePermission.action)\r\n\tauthRolePermissions?: AuthRolePermission[];\r\n\r\n\t@TreeChildren()\r\n\tchildren?: AuthAction[];\r\n\r\n\t@TreeParent()\r\n\tparent?: AuthAction;\r\n\r\n\tstatic allowedRoles = ['superadmin'];\r\n}\r\n","import { Column, Entity, OneToMany } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { AuthRolePermission } from './auth-role-permission';\r\n\r\n@Entity({\r\n\tname: 'auth_entity',\r\n\torderBy: {\r\n\t\taction: 'ASC'\r\n\t}\r\n})\r\nexport class AuthEntity extends BaseModel {\r\n\tstatic displayName = 'AuthAction';\r\n\r\n\t@Column({ nullable: true })\r\n\tentity?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\ttype?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tapplication?: string;\r\n\r\n\t@OneToMany((type) => AuthRolePermission, (authRolePermission) => authRolePermission.entity)\r\n\tauthRolePermissions?: AuthRolePermission[];\r\n\r\n\tstatic allowedRoles = ['superadmin'];\r\n}\r\n","import { Column, Entity, ManyToOne } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { AuthAction } from './auth-action';\r\nimport { AuthEntity } from './auth-entity';\r\nimport { AuthRole } from './auth-role';\r\n\r\n@Entity({\r\n\tname: 'auth_role_permission'\r\n})\r\nexport class AuthRolePermission extends BaseModel {\r\n\tstatic displayName = 'AuthRoleAction';\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tallowed: boolean;\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tcanCreate?: boolean;\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tcanRead?: boolean;\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tcanUpdate?: boolean;\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tcanDelete?: boolean;\r\n\r\n\t@ManyToOne((type) => AuthAction, (authAction) => authAction.authRolePermissions)\r\n\taction?: AuthAction;\r\n\r\n\t@ManyToOne((type) => AuthEntity, (authEntity) => authEntity.authRolePermissions)\r\n\tentity?: AuthEntity;\r\n\r\n\t@ManyToOne((type) => AuthRole, (authRole) => authRole.authRolePermissions)\r\n\trole?: AuthRole;\r\n\r\n\tstatic allowedRoles = ['superadmin'];\r\n}\r\n","import { Column, Entity, JoinTable, ManyToMany, OneToMany, Unique } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { AuthRolePermission } from './auth-role-permission';\r\nimport { User } from './user';\r\n\r\n@Entity({\r\n\tname: 'auth_role',\r\n\torderBy: {\r\n\t\trole: 'ASC'\r\n\t}\r\n})\r\n@Unique(['role'])\r\nexport class AuthRole extends BaseModel {\r\n\tstatic displayName = 'AuthRole';\r\n\r\n\t@Column({ nullable: true })\r\n\trole?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\ttype?: string;\r\n\r\n\t@OneToMany((type) => AuthRolePermission, (authRolePermission) => authRolePermission.role)\r\n\tauthRolePermissions?: AuthRolePermission[];\r\n\r\n\t@ManyToMany((type) => User, (user) => user.roles, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinTable()\r\n\tusers?: User[];\r\n\r\n\tstatic allowedRoles = ['superadmin'];\r\n\r\n\t// static relationships = [{ model: User, name: 'users', ignoreSubRelations: true }];\r\n}\r\n","import { Column, Entity, ManyToMany, Unique } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { AuthRole } from './auth-role';\r\n\r\n@Entity({\r\n\tname: 'auth_user',\r\n\torderBy: {\r\n\t\tusername: 'ASC'\r\n\t}\r\n})\r\n@Unique(['username'])\r\nexport class User extends BaseModel {\r\n\tstatic displayName = 'User';\r\n\r\n\tconstructor(props?: User) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\t@Column()\r\n\tusername?: string;\r\n\r\n\t@Column()\r\n\tpassword?: string;\r\n\r\n\t@Column({\r\n\t\tnullable: true,\r\n\r\n\t\tlength: 255\r\n\t})\r\n\temail?: string;\r\n\r\n\t@Column({\r\n\t\tnullable: true,\r\n\t\tdefault: 0\r\n\t})\r\n\tnumSuccessfulLogin?: number;\r\n\r\n\t@Column({\r\n\t\tnullable: true,\r\n\t\tdefault: 0\r\n\t})\r\n\tnumFailedLogin?: number;\r\n\r\n\t@Column({ nullable: true })\r\n\tlastLoggedInDate?: Date;\r\n\r\n\t@Column({ default: false })\r\n\tisLocked?: boolean;\r\n\r\n\t@ManyToMany((type) => AuthRole, (role) => role.users, { eager: true, cascade: true })\r\n\troles?: AuthRole[];\r\n\r\n\tjwt?: string;\r\n\texpiry?: Date;\r\n\r\n\tstatic relationships = [{ model: AuthRole }];\r\n}\r\n","import {\r\n\tColumn,\r\n\tConnection,\r\n\tCreateDateColumn,\r\n\tPrimaryGeneratedColumn,\r\n\tUpdateDateColumn,\r\n\tVersionColumn\r\n} from 'typeorm';\r\n\r\nexport interface EntityTransaction {\r\n\trelationships?: { model: any; name: string; ignoreSubRelations: boolean } | string[];\r\n\tloadAfterCreate?: boolean;\r\n\r\n\tpreProcess?: (entity: any, dbConnection: Connection) => void;\r\n\tpostProcess?: (entity: any, dbConnection: Connection) => void;\r\n}\r\n\r\nexport abstract class BaseModel implements EntityTransaction {\r\n\tconstructor(props?: any) {\r\n\t\tif (!props) return;\r\n\r\n\t\tObject.keys(props).forEach((prop) => {\r\n\t\t\tconst value = props[prop];\r\n\t\t\tthis[prop] = value;\r\n\t\t});\r\n\t}\r\n\r\n\t@PrimaryGeneratedColumn('uuid')\r\n\tid?: string;\r\n\r\n\t@VersionColumn({\r\n\t\tnullable: true\r\n\t})\r\n\tversion?: string;\r\n\r\n\t@CreateDateColumn()\r\n\tcreateDate?: Date;\r\n\r\n\t@UpdateDateColumn()\r\n\tmodifyDate?: Date;\r\n\r\n\t@Column({\r\n\t\tnullable: true\r\n\t})\r\n\tcreateUser?: string;\r\n\r\n\t@Column({\r\n\t\tnullable: true\r\n\t})\r\n\tmodifyUser?: string;\r\n\r\n\t// Properties\r\n\tstatic displayName?: string;\r\n\tstatic repoType?: string;\r\n\r\n\tstatic allowedRoles?: string[];\r\n\r\n\tstatic relationships?: any[];\r\n\tloadAfterCreate?: boolean;\r\n\r\n\t_tempId?: string;\r\n}\r\n","import { Column, Entity, OneToMany } from 'typeorm';\r\n\r\nimport { Picture } from '../_common/picture';\r\nimport { BaseModel } from '../base';\r\nimport { KMTransaction } from './km-transaction';\r\n\r\n@Entity()\r\nexport class Kid extends BaseModel {\r\n\tstatic displayName = 'Kid';\r\n\r\n\t@Column({ nullable: true })\r\n\tfirstName: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tlastName?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tmiddleName?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tfullName?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tbirthday?: Date;\r\n\r\n\t@Column({ nullable: true })\r\n\tgender?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tnotes?: string;\r\n\r\n\t@Column({ nullable: true, type: 'float4' })\r\n\tmoney?: number;\r\n\r\n\t@OneToMany((type) => KMTransaction, (kmTransaction) => kmTransaction.kid, { cascade: true })\r\n\ttransactions?: KMTransaction[];\r\n\r\n\t@OneToMany((type) => Picture, (picture) => picture.kid, { cascade: true })\r\n\tpictures?: Picture[];\r\n\r\n\tstatic relationships = [\r\n\t\t{ model: KMTransaction, name: 'transactions' },\r\n\t\t{ model: Picture, name: 'pictures' }\r\n\t];\r\n\r\n\tstatic async preProcess?(entity, dbConnection) {\r\n\t\tif (entity.firstName || entity.middleName || entity.lastName) {\r\n\t\t\tentity.fullName = Kid.getKidFullName(entity);\r\n\t\t} else if (entity.fullName) {\r\n\t\t\tconst nameSplit = entity.name.split(' ');\r\n\t\t\tentity.firstName = nameSplit[0];\r\n\t\t\tif (nameSplit.length > 2) {\r\n\t\t\t\tentity.middleName = nameSplit[1];\r\n\t\t\t\tfor (let i = 2; i < nameSplit.length; i++) {\r\n\t\t\t\t\tentity.lastName += nameSplit[i];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tentity.lastName = nameSplit[1];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getKidFullName(kid: Kid) {\r\n\t\treturn `${kid.firstName || ''}${kid.firstName ? ' ' : ''}${kid.middleName || ''}${\r\n\t\t\tkid.middleName ? ' ' : ''\r\n\t\t}${kid.lastName || ''}`;\r\n\t}\r\n}\r\n","import { Column, Entity, ManyToOne, OneToMany } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { Picture } from './../_common/picture';\r\nimport { Kid } from './kid';\r\n\r\n@Entity()\r\nexport class KMTransaction extends BaseModel {\r\n\t@Column({ nullable: true })\r\n\tname?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\ttype?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tincome?: number;\r\n\r\n\t@Column({ nullable: true })\r\n\tcost?: number;\r\n\r\n\t@Column({ nullable: true })\r\n\tpreviousAmount: number;\r\n\r\n\t@Column({ nullable: true })\r\n\tnewAmount: number;\r\n\r\n\t@OneToMany((type) => Picture, (picture) => picture.kmTransaction)\r\n\tpictures?: Picture[];\r\n\r\n\t@ManyToOne((type) => Kid, (kid) => kid.transactions)\r\n\tkid: Kid;\r\n}\r\n","import { checkUserRole } from './checkUserRole';\r\n\r\nexport const checkModelAllowedRoles = (model: any, userJwt: any) => {\r\n\tif (model.allowedRoles && model.allowedRoles.length) {\r\n\t\treturn checkUserRole(userJwt, model.allowedRoles);\r\n\t} else {\r\n\t\treturn true;\r\n\t}\r\n};\r\n","import { User } from '@entities';\r\n\r\nexport const checkUserRole = (user?: User, expectedRoles?: string[]): boolean => {\r\n\tif (!user || !expectedRoles) return true;\r\n\r\n\tconst expectedRolesLower: string[] = expectedRoles.map((er) =>\r\n\t\ter.toLowerCase().trim().split(' ').join('')\r\n\t);\r\n\tconst userRolesLower: string[] = (user.roles || []).map((r) =>\r\n\t\tr.role.toLowerCase().trim().split(' ').join('')\r\n\t);\r\n\r\n\treturn (\r\n\t\texpectedRoles.includes('*') || userRolesLower.some((r) => expectedRolesLower.includes(r))\r\n\t);\r\n};\r\n","module.exports = require(\"bcryptjs\");","module.exports = require(\"body-parser\");","module.exports = require(\"compression\");","module.exports = require(\"cors\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"helmet\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"reflect-metadata\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");"],"sourceRoot":""}