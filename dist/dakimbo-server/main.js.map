{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/dakimbo-server/src/config.ts","webpack:///./apps/dakimbo-server/src/controllers/authController.ts","webpack:///./apps/dakimbo-server/src/controllers/data/data-transaction.ts","webpack:///./apps/dakimbo-server/src/controllers/data/read.ts","webpack:///./apps/dakimbo-server/src/controllers/dataController.ts","webpack:///./apps/dakimbo-server/src/controllers/metricsController.ts","webpack:///./apps/dakimbo-server/src/controllers/userController.ts","webpack:///./apps/dakimbo-server/src/database/database.ts","webpack:///./apps/dakimbo-server/src/database/entities/_entity-map.ts","webpack:///./apps/dakimbo-server/src/database/entities/auth/auth-action.ts","webpack:///./apps/dakimbo-server/src/database/entities/auth/auth-entity.ts","webpack:///./apps/dakimbo-server/src/database/entities/auth/auth-role-permission.ts","webpack:///./apps/dakimbo-server/src/database/entities/auth/auth-role.ts","webpack:///./apps/dakimbo-server/src/database/entities/auth/user.ts","webpack:///./apps/dakimbo-server/src/database/entities/base.ts","webpack:///./apps/dakimbo-server/src/database/entities/index.ts","webpack:///./apps/dakimbo-server/src/main.ts","webpack:///./apps/dakimbo-server/src/middlewares/checkJwt.ts","webpack:///./apps/dakimbo-server/src/middlewares/checkRole.ts","webpack:///./apps/dakimbo-server/src/routes/auth.ts","webpack:///./apps/dakimbo-server/src/routes/data.ts","webpack:///./apps/dakimbo-server/src/routes/index.ts","webpack:///./apps/dakimbo-server/src/routes/metrics.ts","webpack:///./apps/dakimbo-server/src/routes/user.ts","webpack:///./apps/dakimbo-server/src/utilities/logStamp.ts","webpack:///./libs/utilities/src/lib/auth/checkModelAllowedRoles.ts","webpack:///./libs/utilities/src/lib/auth/checkUserRole.ts","webpack:///external \"bcryptjs\"","webpack:///external \"body-parser\"","webpack:///external \"class-validator\"","webpack:///external \"compression\"","webpack:///external \"cors\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"helmet\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"reflect-metadata\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { entityMap } from '@entities';\r\n\r\nconst isProd = process.env.IS_PROD === 'true';\r\nconst pathToEntities = isProd ? './database/entities/**/*.js' : './database/entities/**/*.ts';\r\nconst pathToMigrations = isProd ? './database/migrations/**/*.js' : './database/migrations/**/*.ts';\r\n\r\nexport default {\r\n\tisProd: isProd,\r\n\r\n\thttpsOpts: {\r\n\t\t// Server SSL private key and certificate\r\n\t\t// key: fs.readFileSync(__dirname + '/security/dev-cert.key'),\r\n\t\t// cert: fs.readFileSync(__dirname + '/security/dev-cert.pem'),\r\n\t\t// issuer/CA certificate against which the client certificate will be\r\n\t\t// validated. A certificate that is not signed by a provided CA will be\r\n\t\t// rejected at the protocol layer.\r\n\t\t// ca: fs.readFileSync(__dirname + '/config/certs/ca-cert.pem'),\r\n\t\t// request a certificate, but don't necessarily reject connections from\r\n\t\t// clients providing an untrusted or no certificate. This lets us protect only\r\n\t\t// certain routes, or send a helpful error message to unauthenticated clients.\r\n\t\t// requestCert: true,\r\n\t\t// rejectUnauthorized: true,\r\n\t},\r\n\r\n\tdbOptions: {\r\n\t\ttype: process.env.DB_TYPE,\r\n\t\thost: process.env.DB_HOST,\r\n\t\tport: process.env.DB_PORT,\r\n\t\tusername: process.env.DB_USER,\r\n\t\tpassword: process.env.DB_PASSWORD,\r\n\t\tdatabase: process.env.DB_DATABASE || 'dakimbo-server',\r\n\t\tsynchronize: true,\r\n\t\tlogging: isProd ? false : false,\r\n\t\tentities: Object.values(entityMap)\r\n\t\t// entities: [path.join(__dirname, pathToEntities)],\r\n\t\t// migrations: [path.join(__dirname, pathToMigrations)],\r\n\t\t// migrationsDir: 'migration'\r\n\t},\r\n\r\n\tjwtSecret: process.env.JWT_SECRET || 'CHANGE_ME'\r\n};\r\n","import { User } from '@entities';\r\nimport { validate } from 'class-validator';\r\nimport { Request, Response } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport { getRepository } from 'typeorm';\r\n\r\nimport config from '../config';\r\nimport UserController from './userController';\r\n\r\nconst loginAttempts = 3;\r\n\r\nclass AuthController {\r\n\tstatic login = async (req: Request, res: Response) => {\r\n\t\t//Check if username and password are set\r\n\t\tlet { username, email, password } = req.body;\r\n\t\tif (!((username || email) && password)) {\r\n\t\t\tres.status(400).send(`You didn't enter a username or password...`);\r\n\t\t\tconsole.log(`LOGIN: Username or Password not found; failed to log in!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Get user from database\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tlet user: User;\r\n\t\ttry {\r\n\t\t\tuser = await userRepository.findOneOrFail({ where: [{ username }, { email }] });\r\n\t\t} catch (error) {\r\n\t\t\tres.status(401).send(\r\n\t\t\t\t'Account was not found, please check your username / e-mail and try again.'\r\n\t\t\t);\r\n\t\t\tconsole.log(`LOGIN: User ${username} not found; failed to log in!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (user.numFailedLogin >= loginAttempts || user.isLocked) {\r\n\t\t\tconst attemptsRemaining = loginAttempts - user.numFailedLogin;\r\n\t\t\tuser.isLocked = user.isLocked || attemptsRemaining <= 0;\r\n\t\t\tawait userRepository.save(user); // increment num failed login counter\r\n\r\n\t\t\tres.status(401).send('Account is locked; please contact an administrator!');\r\n\t\t\tconsole.log(`LOGIN: User ${username} has a locked account.`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Check if encrypted password match\r\n\t\tif (!UserController.checkIfUnencryptedPasswordIsValid(password, user)) {\r\n\t\t\tuser.numFailedLogin++;\r\n\t\t\tconst attemptsRemaining = loginAttempts - user.numFailedLogin;\r\n\t\t\tuser.isLocked = user.isLocked || attemptsRemaining <= 0;\r\n\t\t\tawait userRepository.save(user); // increment num failed login counter\r\n\r\n\t\t\tres.status(401).send(\r\n\t\t\t\t`You entered a wrong username, e-mail or password. ${\r\n\t\t\t\t\tattemptsRemaining > 0\r\n\t\t\t\t\t\t? attemptsRemaining + ' login attempts remaining before account is locked!'\r\n\t\t\t\t\t\t: 'Account is now LOCKED!'\r\n\t\t\t\t} `\r\n\t\t\t);\r\n\t\t\tconsole.log(`LOGIN: User ${user.username} wrong password; failed to log in!`);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Sign JWT, valid for 1 hour\r\n\t\tconst token = jwt.sign(\r\n\t\t\t{\r\n\t\t\t\tuserId: user.id,\r\n\t\t\t\tusername: user.username,\r\n\t\t\t\troles: user.roles.map((r) => {\r\n\t\t\t\t\treturn { role: r.role };\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tconfig.jwtSecret,\r\n\t\t\t{\r\n\t\t\t\texpiresIn: '1h'\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// Delete user pass\r\n\t\tdelete user.password;\r\n\r\n\t\tconsole.log(`LOGIN: User ${user.username} successfully logged in!`);\r\n\t\tuser.numSuccessfulLogin++;\r\n\t\tuser.numFailedLogin = 0;\r\n\t\tuser.lastLoggedInDate = new Date();\r\n\t\tawait userRepository.save(user); // increment num successful login counter\r\n\r\n\t\t//Send the jwt in the response\r\n\t\tres.send(Object.assign({ jwt: token }, user));\r\n\t};\r\n\r\n\tstatic changePassword = async (req: Request, res: Response) => {\r\n\t\t//Get ID from JWT\r\n\t\tconst id = res.locals.jwtPayload.userId;\r\n\r\n\t\t//Get parameters from the body\r\n\t\tconst { oldPassword, newPassword } = req.body;\r\n\t\tif (!(oldPassword && newPassword)) {\r\n\t\t\tres.status(400).send();\r\n\t\t}\r\n\r\n\t\t//Get user from the database\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tlet user: User;\r\n\t\ttry {\r\n\t\t\tuser = await userRepository.findOneOrFail(id);\r\n\t\t} catch (id) {\r\n\t\t\tres.status(401).send();\r\n\t\t}\r\n\r\n\t\t//Check if old password matches\r\n\t\tif (!UserController.checkIfUnencryptedPasswordIsValid(oldPassword, user)) {\r\n\t\t\tres.status(401).send();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Validate the model (password length)\r\n\t\tuser.password = newPassword;\r\n\t\tconst errors = await validate(user);\r\n\t\tif (errors.length > 0) {\r\n\t\t\tres.status(400).send(errors);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//Hash the new password and save\r\n\t\tUserController.hashPassword(user);\r\n\t\tuserRepository.save(user);\r\n\r\n\t\tres.status(204).send();\r\n\t};\r\n}\r\nexport default AuthController;\r\n","import { entityMap } from '@entities';\r\nimport { Request, Response } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport { Repository } from 'typeorm';\r\n\r\nimport config from '../../config';\r\nimport { Database } from '../../database/database';\r\nimport { checkModelAllowedRoles } from './../../../../../libs/utilities/src/lib/auth/checkModelAllowedRoles';\r\n\r\nexport class DataTransaction {\r\n\treq: Request;\r\n\tres: Response;\r\n\r\n\tentityName: string;\r\n\tdataObject: any;\r\n\tmodel: any;\r\n\trepo: Repository<any>;\r\n\r\n\tuserJwt: any;\r\n\r\n\tconstructor(req: Request, res: Response) {\r\n\t\tthis.req = req;\r\n\t\tthis.res = res;\r\n\r\n\t\tthis.entityName = this.req.params.entity;\r\n\t\tthis.model = entityMap[this.entityName];\r\n\t\tthis.dataObject = req.body;\r\n\t\tthis.repo = Database._connection.getRepository(this.entityName);\r\n\r\n\t\tthis.userJwt = <any>jwt.verify(<string>this.res.getHeader('token'), config.jwtSecret);\r\n\r\n\t\tif (!this.entityName) {\r\n\t\t\tthis.res.send('You must include the resource name to post this entity to!');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!checkModelAllowedRoles(this.model, this.userJwt)) {\r\n\t\t\tthis.res.status(403).send('You are not allowed to transaction this entity!');\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tasync performTransaction() {\r\n\t\tif (['POST', 'PATCH', 'PUT'].includes(this.req.method)) {\r\n\t\t\tawait this.executeSave();\r\n\t\t} else if (this.req.method === 'DELETE') {\r\n\t\t\tawait this.executeDelete();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async executeSave() {\r\n\t\tconst isArray = Array.isArray(this.dataObject);\r\n\r\n\t\tif (isArray) {\r\n\t\t\tthis.dataObject.forEach((d) => this.setEntityUser(d));\r\n\t\t} else {\r\n\t\t\tthis.setEntityUser(this.dataObject);\r\n\t\t\tif (!this.dataObject.id && this.req.params.id) this.dataObject.id = this.req.params.id;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tif (this.model.preProcess) {\r\n\t\t\t\tif (isArray) {\r\n\t\t\t\t\tconst preProcessPromises = [];\r\n\t\t\t\t\tthis.dataObject.forEach((o) =>\r\n\t\t\t\t\t\tpreProcessPromises.push(this.model.preProcess(o))\r\n\t\t\t\t\t);\r\n\t\t\t\t\tawait Promise.all(preProcessPromises);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tawait this.model.preProcess(this.dataObject);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet savedEntity = await this.repo.save(this.dataObject);\r\n\r\n\t\t\tif (this.model.postProcess) {\r\n\t\t\t\tif (isArray) {\r\n\t\t\t\t\tconst postProcessPromises = [];\r\n\t\t\t\t\tthis.dataObject.forEach((o) =>\r\n\t\t\t\t\t\tpostProcessPromises.push(this.model.postProcess(o))\r\n\t\t\t\t\t);\r\n\t\t\t\t\tawait Promise.all(postProcessPromises);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tawait this.model.postProcess(this.dataObject);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.model.loadAfterCreate) {\r\n\t\t\t\tsavedEntity = await this.repo.findOne(this.dataObject.id);\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`${this.req.method}: ${this.entityName} | ${\r\n\t\t\t\t\tisArray ? 'Length: ' + savedEntity.length : savedEntity.id\r\n\t\t\t\t} | USER: ${this.userJwt.username}`\r\n\t\t\t);\r\n\r\n\t\t\tthis.res.send(savedEntity);\r\n\t\t} catch (e) {\r\n\t\t\tthis.res.status(500).send(e);\r\n\t\t\tconsole.error(\r\n\t\t\t\t`${this.req.method} FAILED: ${this.entityName} | USER: ${this.userJwt.username}`\r\n\t\t\t);\r\n\t\t\tconsole.error(`ERROR: `, e);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async executeDelete() {\r\n\t\tconst idToDelete = this.req.params.id;\r\n\t\tconst isArray = Array.isArray(this.dataObject);\r\n\r\n\t\ttry {\r\n\t\t\tawait this.repo.delete(isArray ? this.dataObject : idToDelete);\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`DELETE: ${this.entityName} | ${\r\n\t\t\t\t\tisArray ? 'Length: ' + this.dataObject.length : idToDelete\r\n\t\t\t\t} | USER: ${this.userJwt.username}`\r\n\t\t\t);\r\n\r\n\t\t\tthis.res.send({\r\n\t\t\t\tid: idToDelete\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tthis.res.status(500).send(e);\r\n\t\t\tconsole.error(\r\n\t\t\t\t`DELETE FAILED: ${this.entityName} | ${idToDelete} | USER: ${this.userJwt.username}`\r\n\t\t\t);\r\n\t\t\tconsole.error(`ERROR: `, e);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate setEntityUser(entity) {\r\n\t\tentity.modifyUser = this.userJwt.username;\r\n\t\tif (this.req.method === 'POST') {\r\n\t\t\tentity.createUser = this.userJwt.username;\r\n\t\t}\r\n\t}\r\n}\r\n","import { entityMap } from '@entities';\r\nimport { Request, Response } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport { getManager, IsNull, Repository } from 'typeorm';\r\n\r\nimport { checkModelAllowedRoles } from '../../../../../libs/utilities/src/lib/auth/checkModelAllowedRoles';\r\nimport config from '../../config';\r\nimport { Database } from '../../database/database';\r\n\r\nexport const readData = async (req: Request, res: Response) => {\r\n\tconst entityName = req.params.entity;\r\n\tif (!entityName) {\r\n\t\tres.send('You must include the resource name to get these entities from!');\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst userJwt = <any>jwt.verify(<string>res.getHeader('token'), config.jwtSecret);\r\n\r\n\tconst model = entityMap[entityName];\r\n\r\n\tif (!checkModelAllowedRoles(model, userJwt)) {\r\n\t\tthis.res.status(403).send('You are not allowed to transaction this entity!');\r\n\t\treturn;\r\n\t}\r\n\r\n\ttry {\r\n\t\tlet repo = Database._connection.getRepository(entityName);\r\n\t\tlet entities = [];\r\n\t\tlet findOptions: any = {};\r\n\t\tlet useDefaultRepo = false;\r\n\t\tconst queries = Object.keys(req.query);\r\n\r\n\t\tif (queries && queries.length) {\r\n\t\t\tlet query = {};\r\n\t\t\tlet attrs = [];\r\n\t\t\tfor (let i = 0, len = queries.length; i < len; i++) {\r\n\t\t\t\tconst key = queries[i];\r\n\t\t\t\tconst value = <any>req.query[key];\r\n\r\n\t\t\t\tif (key === 'useDefaultRepo') {\r\n\t\t\t\t\tuseDefaultRepo = true;\r\n\t\t\t\t} else if (key === 'attrs') {\r\n\t\t\t\t\tattrs = value.split(',');\r\n\t\t\t\t} else if (key.indexOf('.') >= 0) {\r\n\t\t\t\t\tconst splitProp = key.split('.');\r\n\t\t\t\t\tconst prop = splitProp[0],\r\n\t\t\t\t\t\tsubProp = splitProp[1];\r\n\t\t\t\t\tquery[prop] = {};\r\n\t\t\t\t\tquery[prop][subProp] = transformQueryValue(value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tquery[key] = transformQueryValue(value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfindOptions = {};\r\n\t\t\tif (query) {\r\n\t\t\t\tfindOptions.where = query;\r\n\t\t\t}\r\n\t\t\tif (attrs && attrs.length) {\r\n\t\t\t\tfindOptions.select = attrs;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (model.repoType && !useDefaultRepo) {\r\n\t\t\tconst manager = getManager();\r\n\t\t\tswitch (model.repoType) {\r\n\t\t\t\tcase 'tree':\r\n\t\t\t\t\tentities = await manager.getTreeRepository(entityName).findTrees();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tentities = await repo.find(findOptions);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tentities = await repo.find(findOptions);\r\n\t\t}\r\n\r\n\t\tif (model && model.relationships && model.relationships.length) {\r\n\t\t\tawait loadRelationships(entityName, repo, model.relationships, entities);\r\n\t\t}\r\n\r\n\t\tremoveIgnoredAttrs(entities);\r\n\r\n\t\tconsole.log(\r\n\t\t\t`GET: ${entityName}${\r\n\t\t\t\tObject.keys(req.query).length ? ' ' + JSON.stringify(req.query) : ''\r\n\t\t\t} | Returned ${entities.length} entities! USER: ${userJwt.username}`\r\n\t\t);\r\n\r\n\t\tres.send(entities);\r\n\t} catch (e) {\r\n\t\tres.status(500).send(e);\r\n\t\tconsole.error(\r\n\t\t\t`GET FAILED: ${entityName} ${JSON.stringify(req.query)} | USER: ${userJwt.username}`\r\n\t\t);\r\n\t\tconsole.error(`ERROR: `, e);\r\n\t}\r\n};\r\n\r\nconst transformQueryValue = (value: string) => {\r\n\tconst lowerValue = value.toLowerCase();\r\n\tif (lowerValue === 'null') {\r\n\t\treturn IsNull();\r\n\t} else {\r\n\t\treturn value;\r\n\t}\r\n};\r\n\r\nconst removeIgnoredAttrs = (entities: any[]) => {\r\n\tif (!entities) return;\r\n\tconst ignoreAttrs = ['relationships', 'loadAfterCreate'];\r\n\t(entities instanceof Array ? entities : [entities]).forEach((e) =>\r\n\t\tignoreAttrs.forEach((attr) => delete e[attr])\r\n\t);\r\n};\r\n\r\nconst loadRelationships = async (\r\n\tentityName: string,\r\n\trepo: Repository<any>,\r\n\trelationships: any[],\r\n\tbaseEntities?: any[],\r\n\tignoreSubRelations?: boolean\r\n) => {\r\n\tif (!baseEntities || !baseEntities.length) return;\r\n\r\n\t// Wait for all sub finds to complete and spread them into a res object\r\n\tconst { ...res } = await Promise.all(\r\n\t\trelationships.map((relation) => {\r\n\t\t\tconst manager = getManager();\r\n\t\t\tif (relation.model && relation.model.repoType && !relation.useDefaultRepo) {\r\n\t\t\t\tswitch (relation.model.repoType) {\r\n\t\t\t\t\tcase 'tree':\r\n\t\t\t\t\t\treturn manager.getTreeRepository(entityName).findTrees();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn repo.findByIds(\r\n\t\t\t\t\t\t\tbaseEntities.map((entity) => {\r\n\t\t\t\t\t\t\t\tif (!entity || !entity.id) return;\r\n\t\t\t\t\t\t\t\treturn entity.id;\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tselect: ['id'],\r\n\t\t\t\t\t\t\t\trelations: [relation.name]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn repo.findByIds(\r\n\t\t\t\t\tbaseEntities.map((entity) => {\r\n\t\t\t\t\t\tif (!entity || !entity.id) return;\r\n\t\t\t\t\t\treturn entity.id;\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tselect: ['id'],\r\n\t\t\t\t\t\trelations: [relation.name]\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t})\r\n\t);\r\n\r\n\t// Loop over every sub find result, find the \"full entity\" we're trying to build from our base entities,\r\n\t// and attach the corresponding related entites to it (not a \"pure\" function)\r\n\tconst subRelationshipPromises = [];\r\n\r\n\tfor (const i of Object.keys(res)) {\r\n\t\tfor (const r of res[i]) {\r\n\t\t\tconst fullEntity = baseEntities.find((e) => e.id === r.id);\r\n\t\t\tif (fullEntity) {\r\n\t\t\t\tconst relationName = relationships[i].name;\r\n\t\t\t\tconst relationObject = r[relationName];\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\trelationships[i].model &&\r\n\t\t\t\t\trelationships[i].model.relationships &&\r\n\t\t\t\t\t!ignoreSubRelations\r\n\t\t\t\t) {\r\n\t\t\t\t\tconst subRepo = Database._connection.getRepository(\r\n\t\t\t\t\t\trelationships[i].model.displayName\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst subRelationships = relationships[i].model.relationships;\r\n\t\t\t\t\tsubRelationshipPromises.push(\r\n\t\t\t\t\t\tloadRelationships(\r\n\t\t\t\t\t\t\tentityName,\r\n\t\t\t\t\t\t\tsubRepo,\r\n\t\t\t\t\t\t\tsubRelationships,\r\n\t\t\t\t\t\t\trelationObject instanceof Array ? relationObject : [relationObject],\r\n\t\t\t\t\t\t\trelationships[i].ignoreSubRelations\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tremoveIgnoredAttrs(relationObject);\r\n\t\t\t\tremoveIgnoredAttrs(fullEntity);\r\n\t\t\t\tfullEntity[relationName] = relationObject;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tawait Promise.all(subRelationshipPromises);\r\n};\r\n","import { Request, Response } from 'express';\r\n\r\nimport { readData } from './data/read';\r\nimport { DataTransaction } from './data/data-transaction';\r\n\r\nclass DataController {\r\n\tstatic get = readData;\r\n\r\n\tstatic create = async (req: Request, res: Response) => {\r\n\t\tawait new DataTransaction(req, res).performTransaction();\r\n\t};\r\n\r\n\tstatic update = async (req: Request, res: Response) => {\r\n\t\tawait new DataTransaction(req, res).performTransaction();\r\n\t};\r\n\r\n\tstatic delete = async (req: Request, res: Response) => {\r\n\t\tawait new DataTransaction(req, res).performTransaction();\r\n\t};\r\n}\r\nexport default DataController;\r\n","import { Request, Response } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\n\r\nimport config from '../config';\r\nimport { Database } from './../database/database';\r\n\r\nclass MetricsController {\r\n\tstatic getMetricsFor = async (req: Request, res: Response) => {\r\n\t\tconst { username } = <any>jwt.verify(<string>res.getHeader('token'), config.jwtSecret);\r\n\r\n\t\tconst metricToFind = req.params.metricName;\r\n\r\n\t\ttry {\r\n\t\t\tconst metricRepo = Database._connection.getRepository(metricToFind);\r\n\t\t\tconst metrics = await metricRepo.find();\r\n\t\t\tconsole.log(\r\n\t\t\t\t`METRICS FETCHED: ${metricToFind} --- FOUND: ${metrics.length} | USER: ${username}`\r\n\t\t\t);\r\n\t\t\tres.send(metrics);\r\n\t\t} catch (error) {\r\n\t\t\tres.status(500).send(error);\r\n\t\t\tconsole.log(`FAILED: Metrics fetch for ${metricToFind}`);\r\n\t\t}\r\n\t};\r\n}\r\nexport default MetricsController;\r\n","import { User } from '@entities';\r\nimport * as bcrypt from 'bcryptjs';\r\nimport { validate } from 'class-validator';\r\nimport { Request, Response } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport { getRepository } from 'typeorm';\r\n\r\nimport config from '../config';\r\n\r\nclass UserController {\r\n\tstatic listAll = async (req: Request, res: Response) => {\r\n\t\t//Get users from database\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tconst users = await userRepository.find();\r\n\r\n\t\tusers.forEach((user) => {\r\n\t\t\tdelete user.password;\r\n\t\t});\r\n\r\n\t\t//Send the users object\r\n\t\tres.send(users);\r\n\t};\r\n\r\n\tstatic getOneById = async (req: Request, res: Response) => {\r\n\t\t//Get the ID from the url\r\n\t\tconst id: string = req.params.id;\r\n\r\n\t\t//Get the user from database\r\n\t\tconst userRepository = getRepository(User);\r\n\t\ttry {\r\n\t\t\tconst user = await userRepository.findOneOrFail(id);\r\n\r\n\t\t\tdelete user.password;\r\n\r\n\t\t\tres.status(201).send(user);\r\n\t\t} catch (error) {\r\n\t\t\tres.status(404).send('User not found');\r\n\t\t}\r\n\t};\r\n\r\n\tstatic newUser = async (req: Request, res: Response) => {\r\n\t\t//Get parameters from the body\r\n\t\tlet { username, password, email, roles } = req.body;\r\n\t\tlet user = new User();\r\n\t\tuser.username = username;\r\n\t\tuser.password = password;\r\n\t\tuser.email = email;\r\n\t\tuser.roles = roles;\r\n\r\n\t\t// const { adminUser } = <any>jwt.verify(<string>res.getHeader('token'), config.jwtSecret);\r\n\r\n\t\t//Validade if the parameters are ok\r\n\t\tconst errors = await validate(user);\r\n\t\tif (errors.length > 0) {\r\n\t\t\tres.status(400).send(errors);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Hash the password, to securely store on DB\r\n\t\tUserController.hashPassword(user);\r\n\r\n\t\t//Try to save. If fails, the username is already in use\r\n\t\tconst userRepository = getRepository(User);\r\n\t\ttry {\r\n\t\t\tawait userRepository.save(user);\r\n\t\t} catch (e) {\r\n\t\t\tres.status(409).send('Username already in use!');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdelete user.password;\r\n\r\n\t\t//If all ok, send 201 response\r\n\t\tconsole.log(`CREATE USER: ${user.username}`);\r\n\t\tres.status(201).send(user);\r\n\t};\r\n\r\n\tstatic editUser = async (req: Request, res: Response) => {\r\n\t\t//Get the ID from the url\r\n\t\tconst id = req.params.id;\r\n\r\n\t\t//Get values from the body\r\n\t\tconst { username, password, roles, email, isLocked, numFailedLogin } = req.body;\r\n\r\n\t\tconst { adminUser } = <any>jwt.verify(<string>res.getHeader('token'), config.jwtSecret);\r\n\r\n\t\t//Try to find user on database\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tlet user;\r\n\t\ttry {\r\n\t\t\tuser = await userRepository.findOneOrFail(id);\r\n\t\t} catch (error) {\r\n\t\t\t//If not found, send a 404 response\r\n\t\t\tres.status(404).send('User not found');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Validate the new values on model\r\n\t\tuser.username = username;\r\n\t\tuser.roles = roles;\r\n\t\tuser.email = email;\r\n\t\tuser.isLocked = isLocked;\r\n\t\tuser.numFailedLogin = numFailedLogin;\r\n\r\n\t\tif (password) {\r\n\t\t\tuser.password = password;\r\n\t\t\tUserController.hashPassword(user);\r\n\t\t}\r\n\r\n\t\tconst errors = await validate(user);\r\n\t\tif (errors.length > 0) {\r\n\t\t\tres.status(400).send(errors);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Try to save, if fails, that means username already in use\r\n\t\ttry {\r\n\t\t\tawait userRepository.save(user);\r\n\t\t} catch (e) {\r\n\t\t\tres.status(409).send('username already in use');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//After all send a 204 (no content, but accepted) response\r\n\t\tconsole.log(`EDIT USER: ${user.username} | BY ADMIN: ${adminUser}`);\r\n\t\tres.status(204).send();\r\n\t};\r\n\r\n\tstatic deleteUser = async (req: Request, res: Response) => {\r\n\t\t//Get the ID from the url\r\n\t\tconst id = req.params.id;\r\n\r\n\t\tconst { adminUser } = <any>jwt.verify(<string>res.getHeader('token'), config.jwtSecret);\r\n\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tlet user: User;\r\n\t\ttry {\r\n\t\t\tuser = await userRepository.findOneOrFail(id);\r\n\t\t} catch (error) {\r\n\t\t\tres.status(404).send('User not found');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tuserRepository.delete(id);\r\n\r\n\t\t//After all send a 204 (no content, but accepted) response\r\n\t\tconsole.log(`DELETE USER: ${user.username} | BY ADMIN: ${adminUser}`);\r\n\t\tres.status(204).send();\r\n\t};\r\n\r\n\tstatic getCurrentUser = async (req: Request, res: Response) => {\r\n\t\t// Get the jwt token from the head\r\n\t\tconst authHeader = <string>req.headers['authorization'];\r\n\t\tif (!authHeader || !authHeader.includes('Bearer')) {\r\n\t\t\tres.status(408).send('No Authorization Header or Bearer token presented!');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst token = authHeader.split('Bearer')[1].trim();\r\n\t\tlet jwtPayload;\r\n\r\n\t\t// Try to validate the token and get data\r\n\t\ttry {\r\n\t\t\tjwtPayload = <any>jwt.verify(token, config.jwtSecret);\r\n\t\t\tres.locals.jwtPayload = jwtPayload;\r\n\t\t} catch (error) {\r\n\t\t\t// If token is not valid, respond with 401 (unauthorized)\r\n\t\t\tres.status(401).send();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// The token is valid for 1 hour\r\n\t\t// We want to send a new token on every request\r\n\t\tconst { userId, username } = jwtPayload;\r\n\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tlet user: User;\r\n\t\ttry {\r\n\t\t\tuser = await userRepository.findOneOrFail(userId);\r\n\t\t} catch (error) {\r\n\t\t\tres.status(404).send('User not found');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdelete user.password;\r\n\r\n\t\tres.status(201).send(user);\r\n\t};\r\n\r\n\tstatic hashPassword(userEntity: User) {\r\n\t\tuserEntity.password = bcrypt.hashSync(userEntity.password, 8);\r\n\t}\r\n\r\n\tstatic checkIfUnencryptedPasswordIsValid(unencryptedPassword: string, userEntity: User) {\r\n\t\treturn bcrypt.compareSync(unencryptedPassword, userEntity.password);\r\n\t}\r\n}\r\n\r\nexport default UserController;\r\n","import { Connection, ConnectionOptions, createConnection } from 'typeorm';\r\n\r\nexport class Database {\r\n\tstatic _connection: Connection;\r\n\tstatic _dbOptions: ConnectionOptions | any;\r\n\r\n\tconstructor() {}\r\n\r\n\tasync connect(dbOptions: ConnectionOptions) {\r\n\t\tDatabase._dbOptions = dbOptions;\r\n\t\ttry {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Connecting to ${Database._dbOptions.type} Database: ${Database._dbOptions.database} at ${Database._dbOptions.host}:${Database._dbOptions.port} with user: ${Database._dbOptions.username}`\r\n\t\t\t);\r\n\t\t\tDatabase._connection = await createConnection(Database._dbOptions);\r\n\r\n\t\t\tawait this.runMigrations();\r\n\r\n\t\t\tconsole.log(`Connection to database established!`);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Error Connecting to ${Database._dbOptions.host}:${Database._dbOptions.port}\\n`,\r\n\t\t\t\te\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tasync runMigrations() {\r\n\t\tconst migrations = [];\r\n\t\tif (migrations.length) {\r\n\t\t\tconsole.log(`Running migrations...`);\r\n\t\t\tawait Promise.all(migrations);\r\n\t\t\tconsole.log(`Migrations finished!`);\r\n\t\t}\r\n\t}\r\n}\r\n","import { AuthAction } from './auth/auth-action';\r\nimport { AuthEntity } from './auth/auth-entity';\r\nimport { AuthRole } from './auth/auth-role';\r\nimport { AuthRolePermission } from './auth/auth-role-permission';\r\nimport { User } from './auth/user';\r\n\r\nexport const entityMap = {\r\n\t// AUTH\r\n\tUser,\r\n\tAuthRole,\r\n\tAuthAction,\r\n\tAuthEntity,\r\n\tAuthRolePermission\r\n};\r\n\r\nexport { User } from './auth/user';\r\nexport { AuthAction } from './auth/auth-action';\r\nexport { AuthEntity } from './auth/auth-entity';\r\nexport { AuthRole } from './auth/auth-role';\r\nexport { AuthRolePermission } from './auth/auth-role-permission';\r\n","import { Column, Entity, OneToMany, Tree, TreeChildren, TreeParent } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { AuthRolePermission } from './auth-role-permission';\r\n\r\n@Entity({\r\n\tname: 'auth_action',\r\n\torderBy: {\r\n\t\taction: 'ASC'\r\n\t}\r\n})\r\n@Tree('nested-set')\r\nexport class AuthAction extends BaseModel {\r\n\tstatic displayName = 'AuthAction';\r\n\tstatic repoType = 'tree';\r\n\r\n\t@Column({ nullable: true })\r\n\taction?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\ttype?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tapplication?: string;\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tisFolder?: boolean;\r\n\r\n\t@OneToMany((type) => AuthRolePermission, (authRolePermission) => authRolePermission.action)\r\n\tauthRolePermissions?: AuthRolePermission[];\r\n\r\n\t@TreeChildren()\r\n\tchildren?: AuthAction[];\r\n\r\n\t@TreeParent()\r\n\tparent?: AuthAction;\r\n\r\n\tstatic allowedRoles = ['superadmin'];\r\n}\r\n","import { Column, Entity, OneToMany } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { AuthRolePermission } from './auth-role-permission';\r\n\r\n@Entity({\r\n\tname: 'auth_entity',\r\n\torderBy: {\r\n\t\taction: 'ASC'\r\n\t}\r\n})\r\nexport class AuthEntity extends BaseModel {\r\n\tstatic displayName = 'AuthAction';\r\n\r\n\t@Column({ nullable: true })\r\n\tentity?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\ttype?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tapplication?: string;\r\n\r\n\t@OneToMany((type) => AuthRolePermission, (authRolePermission) => authRolePermission.entity)\r\n\tauthRolePermissions?: AuthRolePermission[];\r\n\r\n\tstatic allowedRoles = ['superadmin'];\r\n}\r\n","import { Column, Entity, ManyToOne } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { AuthAction } from './auth-action';\r\nimport { AuthEntity } from './auth-entity';\r\nimport { AuthRole } from './auth-role';\r\n\r\n@Entity({\r\n\tname: 'auth_role_permission'\r\n})\r\nexport class AuthRolePermission extends BaseModel {\r\n\tstatic displayName = 'AuthRoleAction';\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tallowed: boolean;\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tcanCreate?: boolean;\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tcanRead?: boolean;\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tcanUpdate?: boolean;\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tcanDelete?: boolean;\r\n\r\n\t@ManyToOne((type) => AuthAction, (authAction) => authAction.authRolePermissions)\r\n\taction?: AuthAction;\r\n\r\n\t@ManyToOne((type) => AuthEntity, (authEntity) => authEntity.authRolePermissions)\r\n\tentity?: AuthEntity;\r\n\r\n\t@ManyToOne((type) => AuthRole, (authRole) => authRole.authRolePermissions)\r\n\trole?: AuthRole;\r\n\r\n\tstatic allowedRoles = ['superadmin'];\r\n}\r\n","import { Column, Entity, JoinTable, ManyToMany, OneToMany, Unique } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { AuthRolePermission } from './auth-role-permission';\r\nimport { User } from './user';\r\n\r\n@Entity({\r\n\tname: 'auth_role',\r\n\torderBy: {\r\n\t\trole: 'ASC'\r\n\t}\r\n})\r\n@Unique(['role'])\r\nexport class AuthRole extends BaseModel {\r\n\tstatic displayName = 'AuthRole';\r\n\r\n\t@Column({ nullable: true })\r\n\trole?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\ttype?: string;\r\n\r\n\t@OneToMany((type) => AuthRolePermission, (authRolePermission) => authRolePermission.role)\r\n\tauthRolePermissions?: AuthRolePermission[];\r\n\r\n\t@ManyToMany((type) => User, (user) => user.roles, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinTable()\r\n\tusers?: User[];\r\n\r\n\tstatic allowedRoles = ['superadmin'];\r\n\r\n\t// static relationships = [{ model: User, name: 'users', ignoreSubRelations: true }];\r\n}\r\n","import { Length } from 'class-validator';\r\nimport { Column, Entity, ManyToMany, Unique } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { AuthRole } from './auth-role';\r\n\r\n@Entity({\r\n\tname: 'auth_user',\r\n\torderBy: {\r\n\t\tusername: 'ASC'\r\n\t}\r\n})\r\n@Unique(['username'])\r\nexport class User extends BaseModel {\r\n\tstatic displayName = 'User';\r\n\r\n\tconstructor(props?: User) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\t@Column()\r\n\t@Length(4, 20)\r\n\tusername?: string;\r\n\r\n\t@Column()\r\n\t@Length(4, 100)\r\n\tpassword?: string;\r\n\r\n\t@Column({\r\n\t\tnullable: true,\r\n\r\n\t\tlength: 255\r\n\t})\r\n\temail?: string;\r\n\r\n\t@Column({\r\n\t\tnullable: true,\r\n\t\tdefault: 0\r\n\t})\r\n\tnumSuccessfulLogin?: number;\r\n\r\n\t@Column({\r\n\t\tnullable: true,\r\n\t\tdefault: 0\r\n\t})\r\n\tnumFailedLogin?: number;\r\n\r\n\t@Column({ nullable: true })\r\n\tlastLoggedInDate?: Date;\r\n\r\n\t@Column({ default: false })\r\n\tisLocked?: boolean;\r\n\r\n\t@ManyToMany((type) => AuthRole, (role) => role.users, { eager: true, cascade: true })\r\n\troles?: AuthRole[];\r\n\r\n\tjwt?: string;\r\n\texpiry?: Date;\r\n\r\n\tstatic relationships = [{ model: AuthRole }];\r\n}\r\n","import {\r\n\tColumn,\r\n\tConnection,\r\n\tCreateDateColumn,\r\n\tPrimaryGeneratedColumn,\r\n\tUpdateDateColumn,\r\n\tVersionColumn\r\n} from 'typeorm';\r\n\r\nexport interface EntityTransaction {\r\n\trelationships?: { model: any; name: string; ignoreSubRelations: boolean } | string[];\r\n\tloadAfterCreate?: boolean;\r\n\r\n\tpreProcess?: (entity: any, dbConnection: Connection) => void;\r\n\tpostProcess?: (entity: any, dbConnection: Connection) => void;\r\n}\r\n\r\nexport abstract class BaseModel implements EntityTransaction {\r\n\tconstructor(props?: any) {\r\n\t\tif (!props) return;\r\n\r\n\t\tObject.keys(props).forEach((prop) => {\r\n\t\t\tconst value = props[prop];\r\n\t\t\tthis[prop] = value;\r\n\t\t});\r\n\t}\r\n\r\n\t@PrimaryGeneratedColumn('uuid')\r\n\tid?: string;\r\n\r\n\t@VersionColumn({\r\n\t\tnullable: true\r\n\t})\r\n\tversion?: string;\r\n\r\n\t@CreateDateColumn()\r\n\tcreateDate?: Date;\r\n\r\n\t@UpdateDateColumn()\r\n\tmodifyDate?: Date;\r\n\r\n\t@Column({\r\n\t\tnullable: true\r\n\t})\r\n\tcreateUser?: string;\r\n\r\n\t@Column({\r\n\t\tnullable: true\r\n\t})\r\n\tmodifyUser?: string;\r\n\r\n\t// Properties\r\n\tstatic displayName?: string;\r\n\tstatic repoType?: string;\r\n\r\n\tstatic allowedRoles?: string[];\r\n\r\n\tstatic relationships?: any[];\r\n\tloadAfterCreate?: boolean;\r\n\r\n\t_tempId?: string;\r\n}\r\n","/**\r\n * ENTITIES\r\n */\r\nexport * from './_entity-map';\r\n","require('./utilities/logStamp');\nrequire('dotenv').config();\n\nimport 'reflect-metadata';\n\nimport bodyParser from 'body-parser';\nimport compression from 'compression';\nimport cors from 'cors';\nimport express from 'express';\nimport helmet from 'helmet';\n\nimport { Database } from './database/database';\nimport routes from './routes';\nimport config from './config';\n\n(async () => {\n\tconst db = new Database();\n\tawait db.connect(<any>config.dbOptions);\n\n\tconst app = express();\n\tconst port = process.env.port || 1337;\n\n\t// MIDDLEWARE\n\tapp.use(cors());\n\tapp.use(helmet());\n\tapp.use(compression());\n\tapp.use(bodyParser.urlencoded({ extended: false }));\n\tapp.use(bodyParser.json());\n\n\tapp.use(express.static(__dirname + '/public'));\n\tapp.use('/', routes);\n\tapp.get('*', (req, res) => {\n\t\tres.sendFile(__dirname + '/public/index.html');\n\t});\n\n\tconst server = app.listen(port, () => {\n\t\treturn console.log(`Server is listening on ${port}`);\n\t});\n\tserver.on('error', console.error);\n})();\n","import { Request, Response, NextFunction } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport config from '../config';\r\n\r\nexport const checkJwt = (req: Request, res: Response, next: NextFunction) => {\r\n\t// Get the jwt token from the head\r\n\tconst authHeader = <string>req.headers['authorization'];\r\n\tif (!authHeader || !authHeader.includes('Bearer')) {\r\n\t\tres.status(408).send('No Authorization Header or Bearer token presented!');\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst token = authHeader.split('Bearer')[1].trim();\r\n\tlet jwtPayload;\r\n\r\n\t// Try to validate the token and get data\r\n\ttry {\r\n\t\tjwtPayload = <any>jwt.verify(token, config.jwtSecret);\r\n\t\tres.locals.jwtPayload = jwtPayload;\r\n\t} catch (error) {\r\n\t\t// If token is not valid, respond with 401 (unauthorized)\r\n\t\tres.status(401).send();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// The token is valid for 1 hour\r\n\t// We want to send a new token on every request\r\n\tconst { userId, username, roles } = jwtPayload;\r\n\tconst newToken = jwt.sign({ userId, username, roles }, config.jwtSecret, {\r\n\t\texpiresIn: '1h'\r\n\t});\r\n\tres.setHeader('token', newToken);\r\n\r\n\t// Call the next middleware or controller\r\n\tnext();\r\n};\r\n","import { User } from '@entities';\r\nimport { NextFunction, Request, Response } from 'express';\r\nimport { getRepository } from 'typeorm';\r\n\r\nimport { checkUserRole } from './../../../../libs/utilities/src/lib/auth/checkUserRole';\r\n\r\nexport const checkRole = (roles: Array<string>) => {\r\n\treturn async (req: Request, res: Response, next: NextFunction) => {\r\n\t\t// Get the user ID from previous midleware\r\n\t\tconst id = res.locals.jwtPayload.userId;\r\n\r\n\t\t// Get user role from the database\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tlet user: User;\r\n\t\ttry {\r\n\t\t\tuser = await userRepository.findOneOrFail(id);\r\n\t\t} catch (id) {\r\n\t\t\tres.status(401).send();\r\n\t\t}\r\n\r\n\t\t// Check if array of authorized roles includes the user's role\r\n\t\tif (checkUserRole(user, roles)) next();\r\n\t\telse res.status(401).send();\r\n\t};\r\n};\r\n","import { Router } from 'express';\nimport AuthController from '../controllers/authController';\nimport { checkJwt } from '../middlewares/checkJwt';\n\nconst router = Router();\n\n//Login route\nrouter.post('/login', AuthController.login);\n\n//Change my password\nrouter.post('/change-password', [checkJwt], AuthController.changePassword);\n\nexport default router;\n","import { Router } from 'express';\r\nimport { checkJwt } from '../middlewares/checkJwt';\r\nimport { checkRole } from '../middlewares/checkRole';\r\nimport DataController from '../controllers/dataController';\r\nimport config from '../config';\r\n\r\nconst router = Router();\r\n\r\nif (config.isProd) {\r\n\trouter.get('/:entity', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.get);\r\n\r\n\trouter.post('/:entity', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.create);\r\n\r\n\trouter.patch('/:entity/:id', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.update);\r\n\r\n\trouter.put('/:entity/:id', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.update);\r\n\r\n\trouter.delete('/:entity/:id', [checkJwt, checkRole(['superamdin', 'admin'])], DataController.delete);\r\n} else {\r\n\trouter.get('/:entity', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.get);\r\n\r\n\trouter.post('/:entity', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.create);\r\n\r\n\trouter.patch('/:entity/:id', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.update);\r\n\r\n\trouter.put('/:entity/:id', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.update);\r\n\r\n\trouter.delete('/:entity/:id', [checkJwt, checkRole(['superadmin', 'admin'])], DataController.delete);\r\n}\r\n\r\nexport default router;\r\n","import { Router } from 'express';\r\nimport auth from './auth';\r\nimport user from './user';\r\nimport data from './data';\r\nimport metrics from './metrics';\r\n\r\nconst routes = Router();\r\n\r\nroutes.use('/auth', auth);\r\nroutes.use('/user', user);\r\nroutes.use('/data', data);\r\nroutes.use('/metrics', metrics);\r\n\r\nexport default routes;","import { Router } from 'express';\r\nimport { checkJwt } from '../middlewares/checkJwt';\r\nimport { checkRole } from '../middlewares/checkRole';\r\nimport MetricsController from '../controllers/metricsController';\r\n\r\nconst router = Router();\r\n\r\n// Get specific metric\r\nrouter.get('/:metricName', [checkJwt, checkRole(['superadmin'])], MetricsController.getMetricsFor);\r\n\r\nexport default router;","import { Router } from 'express';\nimport UserController from '../controllers/userController';\nimport { checkJwt } from '../middlewares/checkJwt';\nimport { checkRole } from '../middlewares/checkRole';\n\nconst router = Router();\n\n//Get all users\nrouter.get('/', [checkJwt, checkRole(['admin'])], UserController.listAll);\n\n// Get one user\nrouter.get('/:id([0-9]+)', [checkJwt, checkRole(['admin'])], UserController.getOneById);\n\n//Create a new user\nrouter.post('/', UserController.newUser);\n\n//Edit one user\nrouter.patch('/:id([0-9]+)', [checkJwt, checkRole(['admin'])], UserController.editUser);\n\n//Delete one user\nrouter.delete('/:id([0-9]+)', [checkJwt, checkRole(['admin'])], UserController.deleteUser);\n\n// Current User\nrouter.get('/me', [checkJwt], UserController.getCurrentUser);\n\nexport default router;\n","const log = console.log;\nconsole.log = function() {\n\tconst firstParameter = arguments[0];\n\tconst otherParameters = Array.prototype.slice.call(arguments, 1);\n\tlog.apply(console, [`${dateFormat()} ${firstParameter}`.concat(otherParameters)]);\n};\n\nconst error = console.error;\nconsole.error = function() {\n\tconst firstParameter = arguments[0];\n\tconst otherParameters = Array.prototype.slice.call(arguments, 1);\n\terror.apply(console, [`${dateFormat()} ${firstParameter}`.concat(otherParameters)]);\n};\n\nconst dateFormat = () => {\n\treturn `[\\x1b[34m${new Date().toISOString()}\\x1b[0m]`;\n};\n","import { checkUserRole } from './checkUserRole';\r\n\r\nexport const checkModelAllowedRoles = (model: any, userJwt: any) => {\r\n\tif (model.allowedRoles && model.allowedRoles.length) {\r\n\t\treturn checkUserRole(userJwt, model.allowedRoles);\r\n\t} else {\r\n\t\treturn true;\r\n\t}\r\n};\r\n","import { User } from '@entities';\r\n\r\nexport const checkUserRole = (user?: User, expectedRoles?: string[]): boolean => {\r\n\tif (!user || !expectedRoles) return true;\r\n\r\n\tconst expectedRolesLower: string[] = expectedRoles.map((er) =>\r\n\t\ter.toLowerCase().trim().split(' ').join('')\r\n\t);\r\n\tconst userRolesLower: string[] = (user.roles || []).map((r) =>\r\n\t\tr.role.toLowerCase().trim().split(' ').join('')\r\n\t);\r\n\r\n\treturn (\r\n\t\texpectedRoles.includes('*') || userRolesLower.some((r) => expectedRolesLower.includes(r))\r\n\t);\r\n};\r\n","module.exports = require(\"bcryptjs\");","module.exports = require(\"body-parser\");","module.exports = require(\"class-validator\");","module.exports = require(\"compression\");","module.exports = require(\"cors\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"helmet\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"reflect-metadata\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");"],"sourceRoot":""}