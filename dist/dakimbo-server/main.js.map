{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/dakimbo-server/src/config.ts","webpack:///./apps/dakimbo-server/src/controllers/authController.ts","webpack:///./apps/dakimbo-server/src/controllers/data/data-transaction.ts","webpack:///./apps/dakimbo-server/src/controllers/data/log-data-transaction.ts","webpack:///./apps/dakimbo-server/src/controllers/data/read.ts","webpack:///./apps/dakimbo-server/src/controllers/dataController.ts","webpack:///./apps/dakimbo-server/src/controllers/mediaController.ts","webpack:///./apps/dakimbo-server/src/controllers/metaController.ts","webpack:///./apps/dakimbo-server/src/controllers/metricsController.ts","webpack:///./apps/dakimbo-server/src/controllers/userController.ts","webpack:///./apps/dakimbo-server/src/database/database.ts","webpack:///./apps/dakimbo-server/src/main.ts","webpack:///./apps/dakimbo-server/src/middlewares/checkJwt.ts","webpack:///./apps/dakimbo-server/src/middlewares/checkRole.ts","webpack:///./apps/dakimbo-server/src/middlewares/setupProxies.ts","webpack:///./apps/dakimbo-server/src/routes/authRoute.ts","webpack:///./apps/dakimbo-server/src/routes/dataRoute.ts","webpack:///./apps/dakimbo-server/src/routes/index.ts","webpack:///./apps/dakimbo-server/src/routes/mediaRoute.ts","webpack:///./apps/dakimbo-server/src/routes/metaRoute.ts","webpack:///./apps/dakimbo-server/src/routes/metricsRoute.ts","webpack:///./apps/dakimbo-server/src/routes/userRoute.ts","webpack:///./apps/dakimbo-server/src/utilities/logStamp.ts","webpack:///./libs/entities/_common/picture.ts","webpack:///./libs/entities/_entity-map.ts","webpack:///./libs/entities/_metrics/metric-page-view.ts","webpack:///./libs/entities/_metrics/metric-page-visit.ts","webpack:///./libs/entities/auth/auth-action.ts","webpack:///./libs/entities/auth/auth-entity.ts","webpack:///./libs/entities/auth/auth-role-permission.ts","webpack:///./libs/entities/auth/auth-role.ts","webpack:///./libs/entities/auth/user.ts","webpack:///./libs/entities/base.ts","webpack:///./libs/entities/entity-utilities.ts","webpack:///./libs/entities/kid-money/kid.ts","webpack:///./libs/entities/kid-money/km-transaction.ts","webpack:///./libs/utilities/src/lib/auth/checkModelAllowedRoles.ts","webpack:///./libs/utilities/src/lib/auth/checkUserRole.ts","webpack:///./libs/utilities/src/lib/utilities/arrays/getUniqueValues.ts","webpack:///external \"bcryptjs\"","webpack:///external \"body-parser\"","webpack:///external \"chalk\"","webpack:///external \"compression\"","webpack:///external \"cors\"","webpack:///external \"date-fns\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"express-fileupload\"","webpack:///external \"fs\"","webpack:///external \"generate-password\"","webpack:///external \"helmet\"","webpack:///external \"http-proxy-middleware\"","webpack:///external \"https\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"mkdirp\"","webpack:///external \"os\"","webpack:///external \"path\"","webpack:///external \"reflect-metadata\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { ConnectionOptions } from 'typeorm';\r\n\r\nimport { entityMap } from './../../../libs/entities/_entity-map';\r\n\r\nrequire('dotenv').config();\r\n\r\nexport interface ServerConfig {\r\n\tisProd?: boolean;\r\n\r\n\tport?: number;\r\n\tportSSL?: number;\r\n\r\n\tdbOptions?: ConnectionOptions;\r\n\r\n\tjwtSecret?: string;\r\n\r\n\tpathToMedia?: string;\r\n\r\n\thttpsOpts?: {\r\n\t\tkey: string;\r\n\t\tcert: string;\r\n\t\tca: string;\r\n\t\trequestCert: boolean;\r\n\t\trejectUnauthorized: boolean;\r\n\t};\r\n}\r\n\r\nconst fs = require('fs');\r\n\r\nconst isProd = process.env.IS_PROD === 'true';\r\n\r\nconst httpPort = isProd ? +process.env.SERVER_PORT_HTTP : +process.env.SERVER_PORT_HTTP_DEV || 1337;\r\nconst httpsPort = isProd\r\n\t? +process.env.SERVER_PORT_HTTPS\r\n\t: +process.env.SERVER_PORT_HTTPS_DEV || 2337;\r\n\r\nconst certKey = process.env.CERT_KEY_PATH;\r\nconst cert = process.env.CERT_PATH;\r\n\r\nconst pathToEntities = isProd ? './database/entities/**/*.js' : './database/entities/**/*.ts';\r\nconst pathToMigrations = isProd ? './database/migrations/**/*.js' : './database/migrations/**/*.ts';\r\nconst dbType = isProd ? process.env.DB_TYPE : process.env.DB_TYPE_DEV;\r\nconst dbHost = isProd ? process.env.DB_HOST : process.env.DB_HOST_DEV;\r\nconst dbPort = isProd ? process.env.DB_PORT : process.env.DB_PORT_DEV;\r\nconst dbUsername = isProd ? process.env.DB_USER : process.env.DB_USER_DEV;\r\nconst dbPassword = isProd ? process.env.DB_PASSWORD : process.env.DB_PASSWORD_DEV;\r\nconst dbDatabase = isProd ? process.env.DB_DATABASE : process.env.DB_DATABASE_DEV || 'sof-server';\r\n\r\n// const createCertificate = util.promisify(pem.createCertificate);\r\n// const keys = await createCertificate({ days: 1, selfSigned: true });\r\n\r\nconst config: ServerConfig = {\r\n\tisProd: isProd,\r\n\r\n\tport: httpPort,\r\n\tportSSL: httpsPort,\r\n\r\n\tjwtSecret: process.env.JWT_SECRET || 'CHANGE_ME',\r\n\r\n\tdbOptions: {\r\n\t\ttype: <any>dbType,\r\n\t\thost: dbHost,\r\n\t\tport: +dbPort,\r\n\t\tusername: dbUsername,\r\n\t\tpassword: dbPassword,\r\n\t\tdatabase: dbDatabase,\r\n\t\tsynchronize: true,\r\n\t\tlogging: isProd ? false : false,\r\n\t\tentities: Object.values(entityMap)\r\n\t\t// cache: true,\r\n\t\t// entities: [path.join(__dirname, pathToEntities)],\r\n\t\t// migrations: [path.join(__dirname, pathToMigrations)],\r\n\t\t// migrationsDir: 'migration'\r\n\t},\r\n\r\n\tpathToMedia: '/public/_media'\r\n};\r\n\r\nif (certKey && cert) {\r\n\tconfig['httpsOpts'] = {\r\n\t\tkey: fs.readFileSync(__dirname + certKey),\r\n\t\tcert: fs.readFileSync(__dirname + cert),\r\n\t\tca: fs.readFileSync(__dirname + cert),\r\n\t\trequestCert: true,\r\n\t\trejectUnauthorized: false\r\n\t};\r\n}\r\n\r\nexport default config;\r\n","import { Request, Response } from 'express';\r\nimport * as bcrypt from 'bcryptjs';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport { getRepository } from 'typeorm';\r\nimport chalk from 'chalk';\r\n\r\nimport { AuthRole } from '../../../../libs/entities/auth/auth-role';\r\nimport config from '../config';\r\nimport { User } from './../../../../libs/entities/auth/user';\r\nimport { UserController } from './userController';\r\n\r\nconst loginAttempts = 3;\r\n\r\nexport class AuthController {\r\n\tprivate userRepository;\r\n\r\n\tprivate getUserRepository() {\r\n\t\tif (!this.userRepository) {\r\n\t\t\tthis.userRepository = getRepository(User);\r\n\t\t}\r\n\t}\r\n\r\n\tasync login(req: Request, res: Response) {\r\n\t\tthis.getUserRepository();\r\n\r\n\t\t//Check if username and password are set\r\n\t\tlet { username, email, password } = req.body;\r\n\t\tif (!((username || email) && password)) {\r\n\t\t\tres.status(400).send(`You didn't enter a username or password...`);\r\n\t\t\tconsole.log(`LOGIN: Username or Password not found; failed to log in!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Get user from database\r\n\t\tlet user: User;\r\n\t\ttry {\r\n\t\t\tuser = await this.userRepository.findOneOrFail({ where: [{ username }, { email }] });\r\n\t\t} catch (error) {\r\n\t\t\tres.status(401).send(\r\n\t\t\t\t'Account was not found, please check your username / e-mail and try again.'\r\n\t\t\t);\r\n\t\t\tconsole.log(`LOGIN: User ${chalk.magenta(username)} not found; failed to log in!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (user.numFailedLogin >= loginAttempts || user.isLocked) {\r\n\t\t\tconst attemptsRemaining = loginAttempts - user.numFailedLogin;\r\n\t\t\tuser.isLocked = user.isLocked || attemptsRemaining <= 0;\r\n\t\t\tawait this.userRepository.save(user); // increment num failed login counter\r\n\r\n\t\t\tres.status(401).send('Account is locked; please contact an administrator!');\r\n\t\t\tconsole.log(`LOGIN: User ${chalk.magenta(username)} has a locked account.`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Check if encrypted password match\r\n\t\tconst isValidPassword = await this.checkIfUnencryptedPasswordIsValid(password, user);\r\n\t\tif (!isValidPassword) {\r\n\t\t\tuser.numFailedLogin++;\r\n\t\t\tconst attemptsRemaining = loginAttempts - user.numFailedLogin;\r\n\t\t\tuser.isLocked = user.isLocked || attemptsRemaining <= 0;\r\n\t\t\tawait this.userRepository.save(user); // increment num failed login counter\r\n\r\n\t\t\tres.status(401).send(\r\n\t\t\t\t`You entered a wrong username, e-mail or password. ${\r\n\t\t\t\t\tattemptsRemaining > 0\r\n\t\t\t\t\t\t? attemptsRemaining + ' login attempts remaining before account is locked!'\r\n\t\t\t\t\t\t: 'Account is now LOCKED!'\r\n\t\t\t\t} `\r\n\t\t\t);\r\n\t\t\tconsole.log(\r\n\t\t\t\t`LOGIN: User ${chalk.magenta(user.username)} wrong password; failed to log in!`\r\n\t\t\t);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tawait this.handleUserLogin(res, user);\r\n\t}\r\n\r\n\tasync loginCertificate(req: Request | any, res: Response) {\r\n\t\tthis.getUserRepository();\r\n\r\n\t\tif (!req.connection.getPeerCertificate) {\r\n\t\t\tres.status(500).send(\r\n\t\t\t\t`Token login not implemented on the server, please use username / password...`\r\n\t\t\t);\r\n\t\t\treturn; // SSL not enabled, don't try to do anything else\r\n\t\t}\r\n\r\n\t\tif (!req.client.authorized) {\r\n\t\t\tres.status(401).send(`Unauthorized: Client certificate not authorized!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Get certificate details\r\n\t\tconst cert = req.connection.getPeerCertificate(true);\r\n\t\tif (!cert || !Object.keys(cert).length) {\r\n\t\t\tres.status(401).send(\r\n\t\t\t\t`Client certificate was authenticated, but certificate information could not be retrieved...`\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst [lastName, firstName] = [...cert.subject.CN.toLowerCase().split('.')];\r\n\t\tconst certUsername = `${firstName}.${lastName}`;\r\n\r\n\t\tlet user: User;\r\n\t\ttry {\r\n\t\t\tuser = await this.userRepository.findOneOrFail({ where: [{ username: certUsername }] });\r\n\t\t} catch (error) {\r\n\t\t\tuser = await this.createUser(certUsername);\r\n\t\t\tconsole.info(\r\n\t\t\t\t`Didn't find an existing user for presented Certificate, created a new user: ${chalk.magenta(\r\n\t\t\t\t\tcertUsername\r\n\t\t\t\t)}!`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tawait this.handleUserLogin(res, user);\r\n\t}\r\n\r\n\tasync checkIfUnencryptedPasswordIsValid(unencryptedPassword: string, userEntity: User) {\r\n\t\tconst isValid = bcrypt.compareSync(unencryptedPassword, userEntity.password);\r\n\t\treturn isValid;\r\n\t}\r\n\r\n\tasync changePassword(req: Request, res: Response) {\r\n\t\tthis.getUserRepository();\r\n\r\n\t\t//Get ID from JWT\r\n\t\tconst id = res.locals.jwtPayload.userId;\r\n\r\n\t\t//Get parameters from the body\r\n\t\tconst { oldPassword, newPassword } = req.body;\r\n\t\tif (!(oldPassword && newPassword)) {\r\n\t\t\tres.status(400).send();\r\n\t\t}\r\n\r\n\t\t//Get user from the database\r\n\t\tlet user: User;\r\n\t\ttry {\r\n\t\t\tuser = await this.userRepository.findOneOrFail(id);\r\n\t\t} catch (id) {\r\n\t\t\tres.status(401).send();\r\n\t\t}\r\n\r\n\t\t//Check if old password matches\r\n\t\tconst isOldPasswordValid = await this.checkIfUnencryptedPasswordIsValid(oldPassword, user);\r\n\t\tif (!isOldPasswordValid) {\r\n\t\t\tres.status(401).send(`New password must be different than the previous...`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// TODO: Validate the model (password length)\r\n\t\tuser.password = newPassword;\r\n\r\n\t\t//Hash the new password and save\r\n\t\tnew UserController().hashPassword(user);\r\n\t\tthis.userRepository.save(user);\r\n\r\n\t\tres.status(204).send();\r\n\t}\r\n\r\n\tprivate async handleUserLogin(res: Response, user: User) {\r\n\t\t//Sign JWT, valid for 10 hours\r\n\t\tconst token = jwt.sign(\r\n\t\t\t{\r\n\t\t\t\tuserId: user.id,\r\n\t\t\t\tusername: user.username,\r\n\t\t\t\troles: user.roles.map((r) => {\r\n\t\t\t\t\treturn { role: r.role };\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tconfig.jwtSecret,\r\n\t\t\t{\r\n\t\t\t\texpiresIn: '10h'\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// Delete user pass\r\n\t\tdelete user.password;\r\n\r\n\t\tconsole.log(`LOGIN: User ${chalk.magenta(user.username)} successfully logged in!`);\r\n\t\tuser.numSuccessfulLogin++;\r\n\t\tuser.numFailedLogin = 0;\r\n\t\tuser.lastLoggedInDate = new Date();\r\n\t\tawait this.userRepository.save(user); // increment num successful login counter\r\n\r\n\t\t//Send the jwt in the response\r\n\t\tres.send(Object.assign({ jwt: token }, user));\r\n\t}\r\n\r\n\tprivate async createUser(username, roles?) {\r\n\t\tconst randomPassword = require('generate-password').generate({\r\n\t\t\tlength: 14,\r\n\t\t\tnumbers: true,\r\n\t\t\tsymbols: true\r\n\t\t});\r\n\r\n\t\tif (!roles) {\r\n\t\t\tconst authRoleRepository = getRepository(AuthRole);\r\n\t\t\tlet guestRole = await authRoleRepository.findOne({ where: { role: 'guest' } });\r\n\t\t\tif (!guestRole) {\r\n\t\t\t\tlet guest = new AuthRole();\r\n\t\t\t\tguest.role = 'guest';\r\n\t\t\t\tguestRole = await authRoleRepository.save(guest);\r\n\t\t\t}\r\n\r\n\t\t\troles = [guestRole];\r\n\t\t}\r\n\r\n\t\tlet user: User;\r\n\t\tuser = new User({\r\n\t\t\tusername: username,\r\n\t\t\tpassword: randomPassword,\r\n\t\t\troles: roles,\r\n\t\t\tlastLoggedInDate: new Date(),\r\n\t\t\tnumSuccessfulLogin: 0,\r\n\t\t\tnumFailedLogin: 0,\r\n\t\t\tisLocked: false\r\n\t\t});\r\n\r\n\t\tnew UserController().hashPassword(user);\r\n\t\tconst createdUser = await this.userRepository.save(user);\r\n\r\n\t\treturn createdUser;\r\n\t}\r\n}\r\n","import { logDataTransaction, logDataTransactionError } from './log-data-transaction';\r\nimport { Request, Response } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport { Repository } from 'typeorm';\r\n\r\nimport { entityMap } from '../../../../../libs/entities/_entity-map';\r\nimport config from '../../config';\r\nimport { Database } from '../../database/database';\r\nimport { checkModelAllowedRoles } from './../../../../../libs/utilities/src/lib/auth/checkModelAllowedRoles';\r\n\r\nexport class DataTransaction {\r\n\treq: Request;\r\n\tres: Response;\r\n\r\n\tentityName: string;\r\n\tdataObject: any;\r\n\tmodel: any;\r\n\tconcreteModel: any;\r\n\trepo: Repository<any>;\r\n\r\n\tuserJwt: any;\r\n\r\n\tconstructor(req: Request, res: Response) {\r\n\t\tthis.req = req;\r\n\t\tthis.res = res;\r\n\r\n\t\tthis.entityName = this.req.params.entity;\r\n\t\tthis.model = entityMap[this.entityName];\r\n\t\tthis.concreteModel = new this.model();\r\n\t\tthis.dataObject = req.body;\r\n\t\tthis.repo = Database._connection.getRepository(this.entityName);\r\n\r\n\t\tif (!this.model.ignoreAuthorization) {\r\n\t\t\tthis.userJwt = <any>jwt.verify(<string>this.res.getHeader('token'), config.jwtSecret);\r\n\t\t} else {\r\n\t\t\tthis.userJwt = {\r\n\t\t\t\tusername: 'guest'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (!this.entityName) {\r\n\t\t\tthis.res.send('You must include the resource name to post this entity to!');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!checkModelAllowedRoles(this.model, this.userJwt)) {\r\n\t\t\tthis.res.status(403).send('You are not allowed to transaction this entity!');\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tasync performTransaction() {\r\n\t\tif (['POST', 'PATCH', 'PUT'].includes(this.req.method)) {\r\n\t\t\tawait this.executeSave();\r\n\t\t} else if (this.req.method === 'DELETE') {\r\n\t\t\tawait this.executeDelete();\r\n\t\t}\r\n\r\n\t\t// Ensure cache is cleared since entity changed\r\n\t\t// Database._connection.queryResultCache.remove([this.entityName]);\r\n\t}\r\n\r\n\tprivate async executeSave() {\r\n\t\tconst start = Date.now();\r\n\r\n\t\tconst isArray = Array.isArray(this.dataObject);\r\n\r\n\t\tif (isArray) {\r\n\t\t\tthis.dataObject.forEach((d) => this.setEntityUser(d));\r\n\t\t} else {\r\n\t\t\tthis.setEntityUser(this.dataObject);\r\n\t\t\tif (!this.dataObject.id && this.req.params.id) this.dataObject.id = this.req.params.id;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tif (this.concreteModel.preProcess) {\r\n\t\t\t\tif (isArray) {\r\n\t\t\t\t\tconst preProcessPromises = [];\r\n\t\t\t\t\tthis.dataObject.forEach((o) =>\r\n\t\t\t\t\t\tpreProcessPromises.push(\r\n\t\t\t\t\t\t\tthis.concreteModel.preProcess(\r\n\t\t\t\t\t\t\t\to,\r\n\t\t\t\t\t\t\t\tDatabase._connection,\r\n\t\t\t\t\t\t\t\tthis.entityName,\r\n\t\t\t\t\t\t\t\tthis.userJwt\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tawait Promise.all(preProcessPromises);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tawait this.concreteModel.preProcess(\r\n\t\t\t\t\t\tthis.dataObject,\r\n\t\t\t\t\t\tDatabase._connection,\r\n\t\t\t\t\t\tthis.entityName,\r\n\t\t\t\t\t\tthis.userJwt\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet savedEntity = await this.repo.save(this.dataObject);\r\n\r\n\t\t\tif (this.concreteModel.postProcess) {\r\n\t\t\t\tif (isArray) {\r\n\t\t\t\t\tconst postProcessPromises = [];\r\n\t\t\t\t\tthis.dataObject.forEach((o) =>\r\n\t\t\t\t\t\tpostProcessPromises.push(\r\n\t\t\t\t\t\t\tthis.concreteModel.postProcess(\r\n\t\t\t\t\t\t\t\to,\r\n\t\t\t\t\t\t\t\tDatabase._connection,\r\n\t\t\t\t\t\t\t\tthis.entityName,\r\n\t\t\t\t\t\t\t\tthis.userJwt\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tawait Promise.all(postProcessPromises);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tawait this.concreteModel.postProcess(\r\n\t\t\t\t\t\tthis.dataObject,\r\n\t\t\t\t\t\tDatabase._connection,\r\n\t\t\t\t\t\tthis.entityName,\r\n\t\t\t\t\t\tthis.userJwt\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.model.loadAfterSave) {\r\n\t\t\t\tsavedEntity = await this.repo.findOne(this.dataObject.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst end = Date.now();\r\n\t\t\tlogDataTransaction(\r\n\t\t\t\t<any>this.req.method,\r\n\t\t\t\tthis.entityName,\r\n\t\t\t\tsavedEntity,\r\n\t\t\t\tthis.userJwt,\r\n\t\t\t\tend - start\r\n\t\t\t);\r\n\r\n\t\t\tthis.res.send(savedEntity);\r\n\t\t} catch (e) {\r\n\t\t\tconst end = Date.now();\r\n\t\t\tlogDataTransactionError(\r\n\t\t\t\te,\r\n\t\t\t\t<any>this.req.method,\r\n\t\t\t\tthis.entityName,\r\n\t\t\t\tthis.userJwt,\r\n\t\t\t\tend - start\r\n\t\t\t);\r\n\t\t\tthis.res.status(500).send(e);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async executeDelete() {\r\n\t\tconst start = Date.now();\r\n\r\n\t\tconst idToDelete = this.req.params.id;\r\n\t\tconst isArray = Array.isArray(this.dataObject);\r\n\r\n\t\ttry {\r\n\t\t\tawait this.repo.delete(isArray ? this.dataObject : idToDelete);\r\n\r\n\t\t\tconst end = Date.now();\r\n\t\t\tlogDataTransaction(\r\n\t\t\t\t<any>this.req.method,\r\n\t\t\t\tthis.entityName,\r\n\t\t\t\tthis.dataObject,\r\n\t\t\t\tthis.userJwt,\r\n\t\t\t\tend - start\r\n\t\t\t);\r\n\r\n\t\t\tthis.res.send({\r\n\t\t\t\tid: idToDelete\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tconst end = Date.now();\r\n\t\t\tlogDataTransactionError(\r\n\t\t\t\te,\r\n\t\t\t\t<any>this.req.method,\r\n\t\t\t\tthis.entityName,\r\n\t\t\t\tthis.userJwt,\r\n\t\t\t\tend - start\r\n\t\t\t);\r\n\t\t\tthis.res.status(500).send(e);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate setEntityUser(entity) {\r\n\t\tentity.modifyUser = this.userJwt.username;\r\n\t\tif (this.req.method === 'POST') {\r\n\t\t\tentity.createUser = this.userJwt.username;\r\n\t\t}\r\n\t}\r\n}\r\n","import chalk from 'chalk';\r\n\r\nexport const logDataTransaction = (\r\n\tmethod: 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE',\r\n\tentityName: string,\r\n\tentity: any[] | any,\r\n\tuserJwt?: { username: string },\r\n\ttime?: number,\r\n\tquery?: any\r\n) => {\r\n\tlet msg = `${chalk.bold(method)}: ${chalk.yellow(entityName)}`;\r\n\r\n\tswitch (method) {\r\n\t\tcase 'GET':\r\n\t\t\tmsg += `${query ? (Object.keys(query).length ? ' ' + JSON.stringify(query) : '') : ''}`;\r\n\t\t\tmsg += ` | Returned ${chalk.underline(entity.length)} entities!`;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tmsg += ` | ${\r\n\t\t\t\tArray.isArray(entity)\r\n\t\t\t\t\t? 'Length: ' + chalk.underline(entity.length)\r\n\t\t\t\t\t: chalk.underline(entity.id)\r\n\t\t\t}`;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tmsg += ` | ${chalk.bold('USER')}: ${chalk.magenta(userJwt.username)} | ${chalk.bold(\r\n\t\t'TIME'\r\n\t)}: ${chalk.grey(time)} ms`;\r\n\r\n\tconsole.log(msg);\r\n};\r\n\r\nexport const logDataTransactionError = (\r\n\terror: any,\r\n\tmethod: 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE',\r\n\tentityName: string,\r\n\tuserJwt?: { username: string },\r\n\ttime?: number,\r\n\tquery?: any\r\n) => {\r\n\tlet msg = `${chalk.bold(method)}: ${chalk.yellow(entityName)}`;\r\n\tmsg += `${query ? (Object.keys(query).length ? ' ' + JSON.stringify(query) : '') : ''}`;\r\n\tmsg += ` | ${chalk.bold('USER')}: ${chalk.magenta(userJwt.username)} | ${chalk.bold(\r\n\t\t'TIME'\r\n\t)}: ${chalk.grey(time)} ms`;\r\n\r\n\tconsole.error(msg);\r\n\tconsole.error(error);\r\n};\r\n","import { logDataTransaction, logDataTransactionError } from './log-data-transaction';\r\nimport { Request, Response } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport { FindManyOptions, getManager, IsNull } from 'typeorm';\r\n\r\nimport { entityMap } from '../../../../../libs/entities/_entity-map';\r\nimport { checkModelAllowedRoles } from '../../../../../libs/utilities/src/lib/auth/checkModelAllowedRoles';\r\nimport config from '../../config';\r\nimport { Database } from '../../database/database';\r\nimport { getUniqueValues } from './../../../../../libs/utilities/src/lib/utilities/arrays/getUniqueValues';\r\n\r\nexport const readData = async (req: Request, res: Response) => {\r\n\tconst entityName = req.params.entity;\r\n\tif (!entityName) {\r\n\t\tres.send('You must include the resource name to get these entities from!');\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst model = entityMap[entityName];\r\n\tconst concreteModel = new model();\r\n\r\n\tlet userJwt;\r\n\tif (!model.ignoreAuthorization) {\r\n\t\tuserJwt = <any>jwt.verify(<string>res.getHeader('token'), config.jwtSecret);\r\n\t} else {\r\n\t\tuserJwt = {\r\n\t\t\tusername: 'guest'\r\n\t\t};\r\n\t}\r\n\r\n\tif (!checkModelAllowedRoles(model, userJwt)) {\r\n\t\t(<any>this).res.status(403).send('You are not allowed to transaction this entity!');\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst start = Date.now();\r\n\r\n\ttry {\r\n\t\tlet repo = Database._connection.getRepository(entityName);\r\n\t\tlet entities = [];\r\n\t\tlet findOptions: FindManyOptions = {};\r\n\t\tlet cacheTime;\r\n\t\tlet distinct = false;\r\n\t\tlet distinctProp;\r\n\t\tlet useDefaultRepo = false;\r\n\t\tconst queries = Object.keys(req.query);\r\n\r\n\t\tif (queries && queries.length) {\r\n\t\t\tlet query = {};\r\n\t\t\tlet attrs = [];\r\n\t\t\tfor (let i = 0, len = queries.length; i < len; i++) {\r\n\t\t\t\tconst key = queries[i];\r\n\t\t\t\tconst value = <any>req.query[key];\r\n\r\n\t\t\t\tif (key === 'useDefaultRepo') {\r\n\t\t\t\t\tuseDefaultRepo = true;\r\n\t\t\t\t} else if (key === 'attrs') {\r\n\t\t\t\t\tattrs = value.split(',');\r\n\t\t\t\t} else if (key === 'distinct') {\r\n\t\t\t\t\tdistinct = true;\r\n\t\t\t\t} else if (key === 'distinctProp') {\r\n\t\t\t\t\tdistinctProp = value;\r\n\t\t\t\t} else if (key.indexOf('.') >= 0) {\r\n\t\t\t\t\tconst splitProp = key.split('.');\r\n\t\t\t\t\tconst prop = splitProp[0],\r\n\t\t\t\t\t\tsubProp = splitProp[1];\r\n\t\t\t\t\tquery[prop] = {};\r\n\t\t\t\t\tquery[prop][subProp] = transformQueryValue(value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tquery[key] = transformQueryValue(value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfindOptions = {};\r\n\t\t\tif (query) {\r\n\t\t\t\tfindOptions.where = query;\r\n\t\t\t}\r\n\t\t\tif (attrs && attrs.length) {\r\n\t\t\t\tfindOptions.select = attrs;\r\n\t\t\t}\r\n\r\n\t\t\tif (cacheTime) {\r\n\t\t\t\tfindOptions.cache = { id: entityName, milliseconds: cacheTime };\r\n\t\t\t} else {\r\n\t\t\t\tfindOptions.cache = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (model.repoType && !useDefaultRepo) {\r\n\t\t\tconst manager = getManager();\r\n\t\t\tswitch (model.repoType) {\r\n\t\t\t\tcase 'tree':\r\n\t\t\t\t\tentities = await manager.getTreeRepository(entityName).findTrees();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tentities = await repo.find(findOptions);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tentities = await repo.find(findOptions);\r\n\t\t}\r\n\r\n\t\tif (concreteModel.postLoad) {\r\n\t\t\tentities = await concreteModel.postLoad(entities, Database._connection);\r\n\t\t}\r\n\r\n\t\tif (model && model.relationships && model.relationships.length) {\r\n\t\t\tawait loadRelationships(entityName, model.relationships, entities);\r\n\t\t}\r\n\r\n\t\tremoveIgnoredAttrs(entities);\r\n\r\n\t\tif (distinct && distinctProp) {\r\n\t\t\tentities = getUniqueValues(entities, distinctProp)\r\n\t\t\t\t.filter((v) => v)\r\n\t\t\t\t.sort();\r\n\t\t}\r\n\r\n\t\tconst end = Date.now();\r\n\t\tlogDataTransaction('GET', entityName, entities, userJwt, end - start, req.query);\r\n\r\n\t\tres.send(entities);\r\n\t} catch (e) {\r\n\t\tres.status(500).send(e);\r\n\t\tconst end = Date.now();\r\n\t\tlogDataTransactionError(e, 'GET', entityName, userJwt, end - start, req.query);\r\n\t}\r\n};\r\n\r\nconst transformQueryValue = (value: string) => {\r\n\tconst lowerValue = value.toLowerCase();\r\n\tif (lowerValue === 'null') {\r\n\t\treturn IsNull();\r\n\t} else {\r\n\t\treturn value;\r\n\t}\r\n};\r\n\r\nconst removeIgnoredAttrs = (entities: any[]) => {\r\n\tif (!entities) return;\r\n\tconst ignoreAttrs = ['relationships', 'loadAfterSave'];\r\n\t(entities instanceof Array ? entities : [entities]).forEach((e) =>\r\n\t\tignoreAttrs.forEach((attr) => delete e[attr])\r\n\t);\r\n};\r\n\r\nconst loadRelationships = async (\r\n\tentityName: string,\r\n\trelationships: any[],\r\n\tbaseEntities: any[],\r\n\tignoreSubRelations?: boolean\r\n) => {\r\n\tif (!baseEntities || !baseEntities.length) return;\r\n\r\n\tconst repo = Database._connection.getRepository(entityName);\r\n\r\n\t// Wait for all sub finds to complete and spread them into a res object\r\n\tconst { ...res } = await Promise.all(\r\n\t\trelationships.map((relation) => {\r\n\t\t\treturn repo.findByIds(\r\n\t\t\t\tbaseEntities.map((entity) => {\r\n\t\t\t\t\tif (!entity || !entity.id) return;\r\n\t\t\t\t\treturn entity.id;\r\n\t\t\t\t}),\r\n\t\t\t\t{\r\n\t\t\t\t\tselect: ['id'],\r\n\t\t\t\t\trelations: [relation.name]\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t})\r\n\t);\r\n\r\n\t// Loop over every sub find result, find the \"full entity\" we're trying to build from our base entities,\r\n\t// and attach the corresponding related entities to it (not a \"pure\" function)\r\n\tconst subRelationshipPromises = [];\r\n\r\n\tfor (const i of Object.keys(res)) {\r\n\t\tfor (const r of res[i]) {\r\n\t\t\tconst fullEntity = baseEntities.find((e) => e.id === r.id);\r\n\t\t\tif (fullEntity) {\r\n\t\t\t\tconst relationName = relationships[i].name;\r\n\t\t\t\tconst relationModel = relationships[i].model;\r\n\t\t\t\tconst relationModelName =\r\n\t\t\t\t\trelationModel && relationModel.displayName\r\n\t\t\t\t\t\t? relationModel.displayName\r\n\t\t\t\t\t\t: relationships[i].modelName;\r\n\r\n\t\t\t\tconst relationObject = r[relationName];\r\n\r\n\t\t\t\tif (relationModelName) {\r\n\t\t\t\t\tconst subRelationships = entityMap[relationModelName].relationships;\r\n\r\n\t\t\t\t\tif (subRelationships && !ignoreSubRelations) {\r\n\t\t\t\t\t\tsubRelationshipPromises.push(\r\n\t\t\t\t\t\t\tloadRelationships(\r\n\t\t\t\t\t\t\t\trelationModelName,\r\n\t\t\t\t\t\t\t\tsubRelationships,\r\n\t\t\t\t\t\t\t\trelationObject instanceof Array ? relationObject : [relationObject],\r\n\t\t\t\t\t\t\t\trelationships[i].ignoreSubRelations\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tremoveIgnoredAttrs(relationObject);\r\n\t\t\t\tremoveIgnoredAttrs(fullEntity);\r\n\t\t\t\tfullEntity[relationName] = relationObject;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tawait Promise.all(subRelationshipPromises);\r\n};\r\n","import { Request, Response } from 'express';\r\n\r\nimport { readData } from './data/read';\r\nimport { DataTransaction } from './data/data-transaction';\r\n\r\nexport class DataController {\r\n\tget = readData;\r\n\r\n\tasync create(req: Request, res: Response) {\r\n\t\tawait new DataTransaction(req, res).performTransaction();\r\n\t}\r\n\r\n\tasync update(req: Request, res: Response) {\r\n\t\tawait new DataTransaction(req, res).performTransaction();\r\n\t}\r\n\r\n\tasync delete(req: Request, res: Response) {\r\n\t\tawait new DataTransaction(req, res).performTransaction();\r\n\t}\r\n}\r\n","import { getRepository } from 'typeorm';\r\nimport { Request, Response } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport path from 'path';\r\n\r\nimport { entityMap } from '../../../../libs/entities/_entity-map';\r\nimport config from '../config';\r\nimport { convertByteToHuman } from '../../../../libs/utilities/src';\r\n\r\nconst os = require('os');\r\nconst mkdirp = require('mkdirp');\r\n\r\nexport class MediaController {\r\n\tasync uploadMedia(req: Request, res: Response) {\r\n\t\tconst entityName = req.params.entity;\r\n\t\tconst entityId = req.params.id;\r\n\r\n\t\tif (entityName) {\r\n\t\t\tconst model = entityMap[entityName];\r\n\r\n\t\t\tlet userJwt;\r\n\t\t\tif (!model.ignoreAuthorization) {\r\n\t\t\t\tuserJwt = <any>jwt.verify(<string>res.getHeader('token'), config.jwtSecret);\r\n\t\t\t} else {\r\n\t\t\t\tuserJwt = {\r\n\t\t\t\t\tusername: 'guest'\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst media = (<any>req).files.media;\r\n\t\tlet mediaFiles = [];\r\n\t\tif (!media.length) {\r\n\t\t\tmediaFiles = [media];\r\n\t\t} else {\r\n\t\t\tmediaFiles = media;\r\n\t\t}\r\n\r\n\t\tconst mediaMap = {};\r\n\r\n\t\tmediaFiles.forEach(async (f: File | any) => {\r\n\t\t\tlet directoryPath = `${__dirname}${config.pathToMedia}${\r\n\t\t\t\tentityName ? '/' + entityName.toLowerCase() : ''\r\n\t\t\t}${entityId ? '/' + entityId : ''}`;\r\n\t\t\tlet mediaPath = `${directoryPath}/${f.name}`;\r\n\t\t\tif (os.platform() === 'win32') {\r\n\t\t\t\tdirectoryPath = directoryPath.replace('/', '\\\\');\r\n\t\t\t\tmediaPath = mediaPath.replace('/', '\\\\');\r\n\t\t\t}\r\n\t\t\tdirectoryPath = path.resolve(directoryPath);\r\n\t\t\tmediaPath = path.resolve(mediaPath);\r\n\r\n\t\t\tawait mkdirp(directoryPath, { recursive: true });\r\n\r\n\t\t\tf.mv(mediaPath, (error) => {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t\tres.writeHead(500, { 'Content-Type': 'application/json' });\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tmediaMap[mediaPath] = f;\r\n\t\t});\r\n\r\n\t\tconst mediaEntities = await this.handleEntityMediaUpload(mediaMap, entityName, entityId);\r\n\t\tres.status(201).send(mediaEntities);\r\n\t}\r\n\r\n\thandleGeneralMediaUpload() {}\r\n\r\n\tasync handleEntityMediaUpload(\r\n\t\tmedia: { [path: string]: File },\r\n\t\tentityName: string,\r\n\t\tentityId?: string\r\n\t) {\r\n\t\t// let fullEntity: FormBaseModel;\r\n\t\t// try {\r\n\t\t// \tfullEntity = <FormBaseModel>await getRepository(entityName).findOneOrFail(entityId);\r\n\t\t// } catch (e) {\r\n\t\t// \t// couldn't find, need to create one\r\n\t\t// \tfullEntity = <FormBaseModel>await getRepository(entityName).save({});\r\n\t\t// }\r\n\t\t// let mediaEntities: FormMedia[] = [];\r\n\t\t// Object.keys(media).forEach((path) => {\r\n\t\t// \tconst file = media[path];\r\n\t\t// \tlet extension;\r\n\t\t// \ttry {\r\n\t\t// \t\textension = file.name.split('.')[1];\r\n\t\t// \t} catch (e) {\r\n\t\t// \t\textension = '';\r\n\t\t// \t}\r\n\t\t// \tmediaEntities.push(\r\n\t\t// \t\tnew FormMedia({\r\n\t\t// \t\t\tmediaName: file.name,\r\n\t\t// \t\t\textension: extension,\r\n\t\t// \t\t\tsize: file.size,\r\n\t\t// \t\t\tsizeFormatted: convertByteToHuman(file.size),\r\n\t\t// \t\t\ttype: file.type,\r\n\t\t// \t\t\tdescription: '',\r\n\t\t// \t\t\tcategory: '',\r\n\t\t// \t\t\turl: '',\r\n\t\t// \t\t\tthumbnail: '',\r\n\t\t// \t\t\trelativePath: path.split('public')[1],\r\n\t\t// \t\t\tentityName: entityName,\r\n\t\t// \t\t\tformEntity: fullEntity.formEntity\r\n\t\t// \t\t})\r\n\t\t// \t);\r\n\t\t// });\r\n\t\t// if (mediaEntities.length)\r\n\t\t// \tmediaEntities = await getRepository('FormMedia').save(mediaEntities);\r\n\t\t// return mediaEntities;\r\n\t}\r\n}\r\n","import { getUniqueValues } from './../../../../libs/utilities/src/lib/utilities/arrays/getUniqueValues';\r\nimport { Request, Response } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport chalk from 'chalk';\r\n\r\nimport config from '../config';\r\nimport { Database } from '../database/database';\r\nimport { entityMap } from './../../../../libs/entities/_entity-map';\r\nimport { ignoreProps } from './../../../../libs/entities/entity-utilities';\r\n\r\nexport class MetaController {\r\n\tasync getAllEntitiesMetadata(req: Request, res: Response) {\r\n\t\ttry {\r\n\t\t\tconst entityNames = Object.keys(entityMap)\r\n\t\t\t\t.map((model) => {\r\n\t\t\t\t\treturn entityMap[model].displayName || model;\r\n\t\t\t\t})\r\n\t\t\t\t.filter(\r\n\t\t\t\t\t(name) =>\r\n\t\t\t\t\t\t![\r\n\t\t\t\t\t\t\t'User',\r\n\t\t\t\t\t\t\t'AuthRole',\r\n\t\t\t\t\t\t\t'AuthAction',\r\n\t\t\t\t\t\t\t'AuthRoleAction',\r\n\t\t\t\t\t\t\t'MetricPageView',\r\n\t\t\t\t\t\t\t'MetricPageVisit'\r\n\t\t\t\t\t\t].includes(name)\r\n\t\t\t\t)\r\n\t\t\t\t.sort();\r\n\r\n\t\t\tres.send(entityNames);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(`ERROR: ${e}`);\r\n\t\t\tres.status(500).send(e);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getEntityMetadata(req: Request, res: Response) {\r\n\t\tconst entityName = req.params.entity;\r\n\t\tif (!entityName) {\r\n\t\t\tres.send('You must include the resource name to get these entities from!');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst userJwt = <any>jwt.verify(<string>res.getHeader('token'), config.jwtSecret);\r\n\r\n\t\ttry {\r\n\t\t\tconst metadata = Database._connection.getMetadata(entityName);\r\n\t\t\tconst properties = Object.keys(metadata.propertiesMap)\r\n\t\t\t\t.filter((p) => !ignoreProps.includes(p))\r\n\t\t\t\t.sort();\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`METADATA: ${chalk.yellow(entityName)} | # of Props: ${\r\n\t\t\t\t\tproperties.length\r\n\t\t\t\t} | USER: ${chalk.magenta(userJwt.username)}`\r\n\t\t\t);\r\n\r\n\t\t\tres.send(properties);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(`Could not find metadata for entity ${entityName}...`);\r\n\t\t\tres.status(500).send(e);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getUniqueValuesForPropInEntity(req: Request, res: Response) {\r\n\t\tconst entityName = req.params.entity,\r\n\t\t\tprop = req.params.prop;\r\n\t\tif (!entityName) {\r\n\t\t\tres.send('You must include the resource name to get these unique values from!');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!prop) {\r\n\t\t\tres.send('You must include the property to get the unique values for!');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst userJwt = <any>jwt.verify(<string>res.getHeader('token'), config.jwtSecret);\r\n\r\n\t\ttry {\r\n\t\t\tconst values = await Database._connection\r\n\t\t\t\t.getRepository(entityName)\r\n\t\t\t\t.createQueryBuilder(entityName)\r\n\t\t\t\t.getMany();\r\n\r\n\t\t\tconst uniqueValues = getUniqueValues(values, prop)\r\n\t\t\t\t.filter((v) => v)\r\n\t\t\t\t.sort();\r\n\r\n\t\t\tconsole.log(\r\n\t\t\t\t`METADATA: ${chalk.yellow(entityName)} | # of Unique Values: ${\r\n\t\t\t\t\tuniqueValues.length\r\n\t\t\t\t} | USER: ${chalk.magenta(userJwt.username)}`\r\n\t\t\t);\r\n\r\n\t\t\tres.send(uniqueValues);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t`Could not find unique values for entity: ${chalk.yellow(\r\n\t\t\t\t\tentityName\r\n\t\t\t\t)}, prop: ${prop}`\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default MetaController;\r\n","import { Request, Response } from 'express';\r\n\r\nimport { Database } from './../database/database';\r\n\r\nexport class MetricsController {\r\n\tasync getMetricsFor(req: Request, res: Response) {\r\n\t\tconst metricToFind = req.params.metricName;\r\n\r\n\t\ttry {\r\n\t\t\tconst metricRepo = Database._connection.getRepository(metricToFind);\r\n\t\t\tconst metrics = await metricRepo.find();\r\n\t\t\tconsole.log(`METRICS FETCHED: ${metricToFind} --- FOUND: ${metrics.length}`);\r\n\t\t\tres.send(metrics);\r\n\t\t} catch (error) {\r\n\t\t\tres.status(500).send(error);\r\n\t\t\tconsole.log(`FAILED: Metrics fetch for ${metricToFind}`);\r\n\t\t}\r\n\t}\r\n}\r\n","import * as bcrypt from 'bcryptjs';\r\nimport { Request, Response } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport { getRepository } from 'typeorm';\r\nimport chalk from 'chalk';\r\n\r\nimport { User } from '../../../../libs/entities/auth/user';\r\nimport config from '../config';\r\n\r\nexport class UserController {\r\n\tasync listAll(req: Request, res: Response) {\r\n\t\t//Get users from database\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tconst users = await userRepository.find();\r\n\r\n\t\tusers.forEach((user) => {\r\n\t\t\tdelete user.password;\r\n\t\t});\r\n\r\n\t\t//Send the users object\r\n\t\tres.send(users);\r\n\t}\r\n\r\n\tasync getOneById(req: Request, res: Response) {\r\n\t\t//Get the ID from the url\r\n\t\tconst id: string = req.params.id;\r\n\r\n\t\t//Get the user from database\r\n\t\tconst userRepository = getRepository(User);\r\n\t\ttry {\r\n\t\t\tconst user = await userRepository.findOneOrFail(id);\r\n\r\n\t\t\tdelete user.password;\r\n\r\n\t\t\tres.status(201).send(user);\r\n\t\t} catch (error) {\r\n\t\t\tres.status(404).send('User not found');\r\n\t\t}\r\n\t}\r\n\r\n\tasync newUser(req: Request, res: Response) {\r\n\t\t//Get parameters from the body\r\n\t\tlet { username, password, email, roles } = req.body;\r\n\t\tlet user = new User();\r\n\t\tuser.username = username;\r\n\t\tuser.password = password;\r\n\t\tuser.email = email;\r\n\t\tuser.roles = roles;\r\n\r\n\t\t// const { adminUser } = <any>jwt.verify(<string>res.getHeader('token'), config.jwtSecret);\r\n\r\n\t\t// TODO: Validade if the parameters are ok\r\n\r\n\t\t//Hash the password, to securely store on DB\r\n\t\tthis.hashPassword(user);\r\n\r\n\t\t//Try to save. If fails, the username is already in use\r\n\t\tconst userRepository = getRepository(User);\r\n\t\ttry {\r\n\t\t\tawait userRepository.save(user);\r\n\t\t} catch (e) {\r\n\t\t\tres.status(409).send('Username already in use!');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdelete user.password;\r\n\r\n\t\t//If all ok, send 201 response\r\n\t\tconsole.log(`CREATE USER: ${chalk.magenta(user.username)}`);\r\n\t\tres.status(201).send(user);\r\n\t}\r\n\r\n\tasync editUser(req: Request, res: Response) {\r\n\t\t//Get the ID from the url\r\n\t\tconst id = req.params.id;\r\n\r\n\t\t//Get values from the body\r\n\t\tconst { username, password, roles, email, isLocked, numFailedLogin } = req.body;\r\n\r\n\t\tconst { adminUser } = <any>jwt.verify(<string>res.getHeader('token'), config.jwtSecret);\r\n\r\n\t\t//Try to find user on database\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tlet user;\r\n\t\ttry {\r\n\t\t\tuser = await userRepository.findOneOrFail(id);\r\n\t\t} catch (error) {\r\n\t\t\t//If not found, send a 404 response\r\n\t\t\tres.status(404).send('User not found');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Validate the new values on model\r\n\t\tuser.username = username;\r\n\t\tuser.roles = roles;\r\n\t\tuser.email = email;\r\n\t\tuser.isLocked = isLocked || false;\r\n\t\tuser.numFailedLogin = numFailedLogin || 0;\r\n\r\n\t\tif (password) {\r\n\t\t\tuser.password = password;\r\n\t\t\tthis.hashPassword(user);\r\n\t\t}\r\n\r\n\t\t//Try to save, if fails, that means username already in use\r\n\t\ttry {\r\n\t\t\tawait userRepository.save(user);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(e);\r\n\t\t\tres.status(409).send('username already in use');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//After all send a 204 (no content, but accepted) response\r\n\t\tconsole.log(\r\n\t\t\t`EDIT USER: ${chalk.magenta(user.username)} | BY ADMIN: ${chalk.red(\r\n\t\t\t\tadminUser?.username\r\n\t\t\t)}`\r\n\t\t);\r\n\t\tres.status(204).send();\r\n\t}\r\n\r\n\tasync deleteUser(req: Request, res: Response) {\r\n\t\t//Get the ID from the url\r\n\t\tconst id = req.params.id;\r\n\r\n\t\tconst { adminUser } = <any>jwt.verify(<string>res.getHeader('token'), config.jwtSecret);\r\n\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tlet user: User;\r\n\t\ttry {\r\n\t\t\tuser = await userRepository.findOneOrFail(id);\r\n\t\t} catch (error) {\r\n\t\t\tres.status(404).send('User not found');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tuserRepository.delete(id);\r\n\r\n\t\t//After all send a 204 (no content, but accepted) response\r\n\t\tconsole.log(\r\n\t\t\t`DELETE USER: ${chalk.magenta(user.username)} | BY ADMIN: ${chalk.red(\r\n\t\t\t\tadminUser?.username\r\n\t\t\t)}`\r\n\t\t);\r\n\t\tres.status(204).send();\r\n\t}\r\n\r\n\tasync getCurrentUser(req: Request, res: Response) {\r\n\t\t// Get the jwt token from the head\r\n\t\tconst authHeader = <string>req.headers['authorization'];\r\n\t\tif (!authHeader || !authHeader.includes('Bearer')) {\r\n\t\t\tres.status(408).send('No Authorization Header or Bearer token presented!');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst token = authHeader.split('Bearer')[1].trim();\r\n\t\tlet jwtPayload;\r\n\r\n\t\t// Try to validate the token and get data\r\n\t\ttry {\r\n\t\t\tjwtPayload = <any>jwt.verify(token, config.jwtSecret);\r\n\t\t\tres.locals.jwtPayload = jwtPayload;\r\n\t\t} catch (error) {\r\n\t\t\t// If token is not valid, respond with 401 (unauthorized)\r\n\t\t\tres.status(401).send();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// The token is valid for 1 hour\r\n\t\t// We want to send a new token on every request\r\n\t\tconst { userId, username } = jwtPayload;\r\n\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tlet user: User;\r\n\t\ttry {\r\n\t\t\tuser = await userRepository.findOneOrFail(userId);\r\n\t\t} catch (error) {\r\n\t\t\tres.status(404).send('User not found');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdelete user.password;\r\n\r\n\t\tres.status(201).send(user);\r\n\t}\r\n\r\n\tasync hashPassword(userEntity: User) {\r\n\t\tuserEntity.password = bcrypt.hashSync(userEntity.password, 8);\r\n\t}\r\n}\r\n","import { Connection, ConnectionOptions, createConnection } from 'typeorm';\r\n\r\nexport class Database {\r\n\tstatic _connection: Connection;\r\n\tstatic _dbOptions: ConnectionOptions | any;\r\n\r\n\tconstructor() {}\r\n\r\n\tasync connect(dbOptions: ConnectionOptions) {\r\n\t\tDatabase._dbOptions = dbOptions;\r\n\t\ttry {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Connecting to ${Database._dbOptions.type} Database: ${Database._dbOptions.database} at ${Database._dbOptions.host}:${Database._dbOptions.port} with user: ${Database._dbOptions.username}`\r\n\t\t\t);\r\n\t\t\tDatabase._connection = await createConnection(Database._dbOptions);\r\n\r\n\t\t\tawait this.runMigrations();\r\n\r\n\t\t\tconsole.log(`Connection to database established!`);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Error Connecting to ${Database._dbOptions.host}:${Database._dbOptions.port}\\n`,\r\n\t\t\t\te\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tasync runMigrations() {\r\n\t\tconst migrations = [];\r\n\t\tif (migrations.length) {\r\n\t\t\tconsole.log(`Running migrations...`);\r\n\t\t\tawait Promise.all(migrations);\r\n\t\t\tconsole.log(`Migrations finished!`);\r\n\t\t}\r\n\t}\r\n}\r\n","import 'reflect-metadata';\r\n\r\nimport bodyParser from 'body-parser';\r\nimport compression from 'compression';\r\nimport cors from 'cors';\r\nimport express from 'express';\r\nimport fileUpload from 'express-fileupload';\r\nimport helmet from 'helmet';\r\n\r\nimport config from './config';\r\nimport { Database } from './database/database';\r\nimport { setupProxies } from './middlewares/setupProxies';\r\nimport routes from './routes';\r\n\r\nrequire('./utilities/logStamp');\r\nrequire('dotenv').config();\r\n\r\n(async () => {\r\n\tconst db = new Database();\r\n\tawait db.connect(<any>config.dbOptions);\r\n\r\n\tconst app = express();\r\n\r\n\tsetupProxies(app);\r\n\r\n\t// MIDDLEWARE\r\n\t// app.use(morgan('dev'));\r\n\tapp.use(cors());\r\n\tapp.use(helmet());\r\n\tapp.use(compression());\r\n\tapp.use(bodyParser.urlencoded({ limit: '100mb', extended: true }));\r\n\tapp.use(bodyParser.json({ limit: '100mb' }));\r\n\r\n\tapp.use(\r\n\t\tfileUpload({\r\n\t\t\tlimits: { fileSize: 50 * 1024 * 1024 }\r\n\t\t\t// useTempFiles: true,\r\n\t\t\t// tempFileDir: '/temp',\r\n\t\t\t// createParentPath: true\r\n\t\t})\r\n\t);\r\n\r\n\t// ROUTES\r\n\tapp.use(express.static(__dirname + '/public'));\r\n\tapp.use('/', routes);\r\n\tapp.get('*', (req, res) => {\r\n\t\tres.sendFile(__dirname + '/public/index.html');\r\n\t});\r\n\r\n\t// SERVERS\r\n\tconst httpServer = app.listen(config.port, () => {\r\n\t\treturn console.log(`HTTP Server is listening on ${config.port}`);\r\n\t});\r\n\thttpServer.on('error', console.error);\r\n\r\n\tconst https = require('https');\r\n\tconst httpsServer = https.createServer(config.httpsOpts, app).listen(config.portSSL, () => {\r\n\t\treturn console.log(`HTTPS Server is listening on ${config.portSSL}`);\r\n\t});\r\n\thttpsServer.on('error', console.error);\r\n})();\r\n","import { NextFunction, Request, Response } from 'express';\r\nimport * as jwt from 'jsonwebtoken';\r\n\r\nimport config from '../config';\r\nimport { entityMap } from './../../../../libs/entities/_entity-map';\r\n\r\nexport const checkJwt = (req: Request, res: Response, next: NextFunction) => {\r\n\t// Check if the requested entity doesn't need authorization\r\n\tconst entityName = req.params.entity;\r\n\tconst model = entityMap[entityName];\r\n\tconst authHeader = <string>req.headers['authorization'];\r\n\r\n\tif (model && model.ignoreAuthorization) {\r\n\t\tnext();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Get the jwt token from the head\r\n\tif (!authHeader || !authHeader.includes('Bearer')) {\r\n\t\tres.status(408).send('No Authorization Header or Bearer token presented!');\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst token = authHeader.split('Bearer')[1].trim();\r\n\tlet jwtPayload;\r\n\r\n\t// Try to validate the token and get data\r\n\ttry {\r\n\t\tjwtPayload = <any>jwt.verify(token, config.jwtSecret);\r\n\t\tres.locals.jwtPayload = jwtPayload;\r\n\t} catch (error) {\r\n\t\t// If token is not valid, respond with 401 (unauthorized)\r\n\t\tres.status(401).send();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// The token is valid for 1 hour\r\n\t// We want to send a new token on every request\r\n\tconst { userId, username, roles } = jwtPayload;\r\n\tconst newToken = jwt.sign({ userId, username, roles }, config.jwtSecret, {\r\n\t\texpiresIn: '10h'\r\n\t});\r\n\tres.setHeader('token', newToken);\r\n\r\n\t// Call the next middleware or controller\r\n\tnext();\r\n};\r\n","import { NextFunction, Request, Response } from 'express';\r\nimport { getRepository } from 'typeorm';\r\n\r\nimport { User } from '../../../../libs/entities/auth/user';\r\nimport { entityMap } from './../../../../libs/entities/_entity-map';\r\nimport { checkUserRole } from './../../../../libs/utilities/src/lib/auth/checkUserRole';\r\n\r\nexport const checkRole = (roles: Array<string>) => {\r\n\treturn async (req: Request, res: Response, next: NextFunction) => {\r\n\t\t// Check if the requested entity doesn't need authorization\r\n\t\tconst entityName = req.params.entity;\r\n\t\tconst model = entityMap[entityName];\r\n\t\tif (!model || model.ignoreAuthorization) {\r\n\t\t\tnext();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Get the user ID from previous midleware\r\n\t\tconst id = res.locals.jwtPayload.userId;\r\n\r\n\t\t// Get user role from the database\r\n\t\tconst userRepository = getRepository(User);\r\n\t\tlet user: User;\r\n\t\ttry {\r\n\t\t\tuser = await userRepository.findOneOrFail(id);\r\n\t\t} catch (id) {\r\n\t\t\tres.status(401).send();\r\n\t\t}\r\n\r\n\t\t// Check if array of authorized roles includes the user's role\r\n\t\tif (checkUserRole(user, roles)) next();\r\n\t\telse res.status(401).send();\r\n\t};\r\n};\r\n","import { createProxyMiddleware } from 'http-proxy-middleware';\r\nimport { ProxyUrl } from '../interfaces/proxy-url';\r\n\r\nrequire('dotenv').config();\r\n\r\nexport const setupProxies = (app) => {\r\n\tlet proxyUrls: ProxyUrl[];\r\n\ttry {\r\n\t\tproxyUrls = process.env.PROXY_URLS ? JSON.parse(process.env.PROXY_URLS) : null;\r\n\r\n\t\tif (proxyUrls?.length) {\r\n\t\t\tproxyUrls.forEach((proxyUrl) => {\r\n\t\t\t\tapp.use(\r\n\t\t\t\t\tproxyUrl.route,\r\n\t\t\t\t\tcreateProxyMiddleware({\r\n\t\t\t\t\t\ttarget: proxyUrl.target,\r\n\t\t\t\t\t\tsecure: false,\r\n\t\t\t\t\t\tchangeOrigin: true,\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\tConnection: 'keep-alive'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t...proxyUrl.options\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tconsole.error('ERROR: Failed parsing PROXY_URLS', e);\r\n\t}\r\n};\r\n","import { Router } from 'express';\r\n\r\nimport { AuthController } from '../controllers/authController';\r\nimport { checkJwt } from '../middlewares/checkJwt';\r\n\r\nconst router = Router();\r\n\r\nconst authController = new AuthController();\r\n\r\n//Login route\r\nrouter.post('/login', authController.login.bind(authController));\r\n\r\nrouter.post('/login-cert', authController.loginCertificate.bind(authController));\r\n\r\n//Change my password\r\nrouter.post('/change-password', [checkJwt], authController.changePassword.bind(authController));\r\n\r\nexport default router;\r\n","import { Router } from 'express';\r\nimport { checkJwt } from '../middlewares/checkJwt';\r\nimport { checkRole } from '../middlewares/checkRole';\r\nimport { DataController } from '../controllers/dataController';\r\nimport config from '../config';\r\n\r\nconst router = Router();\r\n\r\nconst dataController = new DataController();\r\n\r\nrouter.get(\r\n\t'/:entity',\r\n\t[checkJwt, checkRole(['superadmin', 'admin', 'user', 'guest'])],\r\n\tdataController.get\r\n);\r\n\r\nrouter.post(\r\n\t'/:entity',\r\n\t[checkJwt, checkRole(['superadmin', 'admin', 'user', 'guest'])],\r\n\tdataController.create.bind(dataController)\r\n);\r\n\r\nrouter.patch(\r\n\t'/:entity/:id',\r\n\t[checkJwt, checkRole(['superadmin', 'admin', 'user'])],\r\n\tdataController.update.bind(dataController)\r\n);\r\n\r\nrouter.put(\r\n\t'/:entity/:id',\r\n\t[checkJwt, checkRole(['superadmin', 'admin', 'user'])],\r\n\tdataController.update.bind(dataController)\r\n);\r\n\r\nrouter.put(\r\n\t'/:entity',\r\n\t[checkJwt, checkRole(['superadmin', 'admin', 'user'])],\r\n\tdataController.update.bind(dataController)\r\n);\r\n\r\nrouter.delete(\r\n\t'/:entity/:id',\r\n\t[checkJwt, checkRole(['superadmin', 'admin', 'user'])],\r\n\tdataController.delete.bind(dataController)\r\n);\r\n\r\nrouter.delete(\r\n\t'/:entity',\r\n\t[checkJwt, checkRole(['superadmin', 'admin', 'user'])],\r\n\tdataController.delete.bind(dataController)\r\n);\r\n\r\nexport default router;\r\n","import { Router } from 'express';\r\nimport { createProxyMiddleware } from 'http-proxy-middleware';\r\n\r\nimport { ProxyUrl } from './../interfaces/proxy-url';\r\nimport auth from './authRoute';\r\nimport data from './dataRoute';\r\nimport media from './mediaRoute';\r\nimport meta from './metaRoute';\r\nimport metrics from './metricsRoute';\r\nimport user from './userRoute';\r\n\r\nconst routes = Router();\r\n\r\nroutes.use('/auth', auth);\r\nroutes.use('/user', user);\r\nroutes.use('/data', data);\r\nroutes.use('/meta', meta);\r\nroutes.use('/metrics', metrics);\r\nroutes.use('/media', media);\r\n\r\nexport default routes;\r\n","import { Router } from 'express';\r\n\r\nimport { MediaController } from '../controllers/mediaController';\r\nimport { checkJwt } from '../middlewares/checkJwt';\r\n\r\nconst router = Router();\r\n\r\nconst mediaController = new MediaController();\r\n\r\n// Upload Media\r\nrouter.post('/', [checkJwt], mediaController.uploadMedia.bind(mediaController));\r\n\r\nrouter.post('/:entity', [checkJwt], mediaController.uploadMedia.bind(mediaController));\r\n\r\nrouter.post('/:entity/:id', [checkJwt], mediaController.uploadMedia.bind(mediaController));\r\n\r\nexport default router;\r\n","import { Router } from 'express';\r\n\r\nimport { MetaController } from '../controllers/metaController';\r\nimport { checkJwt } from '../middlewares/checkJwt';\r\nimport { checkRole } from '../middlewares/checkRole';\r\n\r\nconst router = Router();\r\n\r\nconst metaController = new MetaController();\r\n\r\nrouter.get(\r\n\t'/',\r\n\t[checkJwt, checkRole(['superadmin'])],\r\n\tmetaController.getAllEntitiesMetadata.bind(metaController)\r\n);\r\n\r\n// Get Metadata for entity\r\nrouter.get(\r\n\t'/:entity',\r\n\t[checkJwt, checkRole(['superadmin'])],\r\n\tmetaController.getEntityMetadata.bind(metaController)\r\n);\r\n\r\nrouter.get(\r\n\t'/values/unique/:entity/:prop',\r\n\t[checkJwt, checkRole(['superadmin', 'admin', 'user'])],\r\n\tmetaController.getUniqueValuesForPropInEntity.bind(metaController)\r\n);\r\n\r\nexport default router;\r\n","import { Router } from 'express';\r\nimport { checkJwt } from '../middlewares/checkJwt';\r\nimport { checkRole } from '../middlewares/checkRole';\r\nimport { MetricsController } from '../controllers/metricsController';\r\n\r\nconst router = Router();\r\n\r\nconst metricsController = new MetricsController();\r\n\r\n// Get specific metric\r\nrouter.get(\r\n\t'/:metricName',\r\n\t[checkJwt, checkRole(['superadmin'])],\r\n\tmetricsController.getMetricsFor.bind(metricsController)\r\n);\r\n\r\nexport default router;\r\n","import { Router } from 'express';\r\n\r\nimport { UserController } from '../controllers/userController';\r\nimport { checkJwt } from '../middlewares/checkJwt';\r\nimport { checkRole } from '../middlewares/checkRole';\r\n\r\nconst router = Router();\r\n\r\nconst userController = new UserController();\r\n\r\n//Get all users\r\nrouter.get(\r\n\t'/',\r\n\t[checkJwt, checkRole(['admin', 'superadmin'])],\r\n\tuserController.listAll.bind(userController)\r\n);\r\n\r\n// Get one user\r\nrouter.get(\r\n\t'/:id',\r\n\t[checkJwt, checkRole(['admin', 'superadmin'])],\r\n\tuserController.getOneById.bind(userController)\r\n);\r\n\r\n//Create a new user\r\nrouter.post('/', userController.newUser.bind(userController));\r\n\r\n//Edit one user\r\nrouter.patch(\r\n\t'/:id',\r\n\t[checkJwt, checkRole(['superadmin'])],\r\n\tuserController.editUser.bind(userController)\r\n);\r\n\r\n//Delete one user\r\nrouter.delete(\r\n\t'/:id',\r\n\t[checkJwt, checkRole(['superadmin'])],\r\n\tuserController.deleteUser.bind(userController)\r\n);\r\n\r\n// Current User\r\nrouter.get('/me', [checkJwt], userController.getCurrentUser);\r\n\r\nexport default router;\r\n","import { format } from 'date-fns';\r\nimport chalk from 'chalk';\r\n\r\nconst log = console.log;\r\nconsole.log = function () {\r\n\tconst firstParameter = arguments[0];\r\n\tconst otherParameters = Array.prototype.slice.call(arguments, 1);\r\n\tlog.apply(console, [`${dateFormat()} ${firstParameter}`.concat(otherParameters)]);\r\n};\r\n\r\nconst error = console.error;\r\nconsole.error = function () {\r\n\tconst firstParameter = arguments[0];\r\n\tconst otherParameters = Array.prototype.slice.call(arguments, 1);\r\n\terror.apply(console, [`${dateFormat()} ${firstParameter}`.concat(otherParameters)]);\r\n};\r\n\r\nconst dateFormat = () => {\r\n\treturn `[${chalk.cyan(format(new Date(), `yyyy-MM-dd HH:mm:ss`))}]`;\r\n};\r\n","import { Column, Entity, ManyToOne } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { Kid } from '../kid-money/kid';\r\nimport { KMTransaction } from '../kid-money/km-transaction';\r\n\r\n@Entity()\r\nexport class Picture extends BaseModel {\r\n\t@Column({ nullable: true })\r\n\tpath?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tname: string;\r\n\r\n\t@Column({ nullable: true })\r\n\textension?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tlastModifiedDate?: Date;\r\n\r\n\t@Column({ nullable: true })\r\n\tsize: number;\r\n\r\n\t// RELATIONSHIPS\r\n\t@ManyToOne((type) => Kid, (kid) => kid.pictures)\r\n\tkid: Kid;\r\n\r\n\t@ManyToOne((type) => KMTransaction, (kmTransaction) => kmTransaction.pictures)\r\n\tkmTransaction: KMTransaction;\r\n\r\n\tfile?: any;\r\n\r\n\tstatic async preProcess?(entity, dbConnection) {\r\n\t\tif (entity.name) {\r\n\t\t\tentity.extension = entity.name.split('.')[1];\r\n\t\t}\r\n\t\tconsole.log(entity.file);\r\n\t}\r\n}\r\n","import { Picture } from './_common/picture';\r\nimport { MetricPageView } from './_metrics/metric-page-view';\r\nimport { MetricPageVisit } from './_metrics/metric-page-visit';\r\nimport { AuthAction } from './auth/auth-action';\r\nimport { AuthEntity } from './auth/auth-entity';\r\nimport { AuthRole } from './auth/auth-role';\r\nimport { AuthRolePermission } from './auth/auth-role-permission';\r\nimport { User } from './auth/user';\r\nimport { Kid } from './kid-money/kid';\r\nimport { KMTransaction } from './kid-money/km-transaction';\r\n\r\nexport const entityMap = {\r\n\t// AUTH\r\n\tUser,\r\n\tAuthRole,\r\n\tAuthAction,\r\n\tAuthEntity,\r\n\tAuthRolePermission,\r\n\r\n\t// METRICS\r\n\tMetricPageView,\r\n\tMetricPageVisit,\r\n\r\n\t// COMMON\r\n\tPicture,\r\n\r\n\t// KID MONEY\r\n\tKid,\r\n\tKMTransaction\r\n};\r\n","import { Column, Entity } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\n\r\n@Entity({\r\n\tname: '__metric_page_view',\r\n\torderBy: {\r\n\t\tpageName: 'ASC'\r\n\t}\r\n})\r\nexport class MetricPageView extends BaseModel {\r\n\tstatic displayName = 'MetricPageView';\r\n\t\r\n\tconstructor(props?: MetricPageView) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\t@Column({ nullable: true }) pageName: string;\r\n\r\n\t@Column({ nullable: true, default: 1 }) viewCount: number;\r\n\r\n\t@Column({ nullable: true }) appName: string;\r\n}\r\n","import { Column, Entity } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { Database } from './../../../apps/dakimbo-server/src/database/database';\r\nimport { EntityTransaction } from './../base';\r\n\r\n@Entity({\r\n\tname: '__metric_page_visit',\r\n\torderBy: {\r\n\t\tcreateDate: 'DESC'\r\n\t}\r\n})\r\nexport class MetricPageVisit extends BaseModel implements EntityTransaction {\r\n\tstatic displayName = 'MetricPageVisit';\r\n\r\n\tconstructor(props?: MetricPageVisit) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\t@Column({ nullable: true }) pageName: string;\r\n\r\n\t@Column({ nullable: true }) appName: string;\r\n\r\n\tstatic async preProcess(entity) {\r\n\t\t// Check if there is already an entry for this metric in the DB for views;\r\n\t\t// if there is, then increment the page count, otherwise start a new one\r\n\t\tconst repo = Database._connection.getRepository('MetricPageView');\r\n\t\tconst existingPageViewMetric: any = await repo.findOne({\r\n\t\t\twhere: { appName: entity.appName, pageName: entity.pageName }\r\n\t\t});\r\n\t\tif (!existingPageViewMetric) {\r\n\t\t\tawait repo.save({\r\n\t\t\t\tpageName: entity.pageName,\r\n\t\t\t\tappName: entity.appName,\r\n\t\t\t\tviewCount: 1\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\texistingPageViewMetric.viewCount++;\r\n\t\t\tawait repo.save(existingPageViewMetric);\r\n\t\t}\r\n\t}\r\n}\r\n","import { Column, Entity, OneToMany, Tree, TreeChildren, TreeParent } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { AuthRolePermission } from './auth-role-permission';\r\n\r\n@Entity({\r\n\tname: 'auth_action',\r\n\torderBy: {\r\n\t\taction: 'ASC'\r\n\t}\r\n})\r\n@Tree('nested-set')\r\nexport class AuthAction extends BaseModel {\r\n\tstatic displayName = 'AuthAction';\r\n\tstatic repoType = 'tree';\r\n\r\n\t@Column({ nullable: true })\r\n\taction?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\ttype?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tapplication?: string;\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tisFolder?: boolean;\r\n\r\n\t@OneToMany((type) => AuthRolePermission, (authRolePermission) => authRolePermission.action)\r\n\tauthRolePermissions?: AuthRolePermission[];\r\n\r\n\t@TreeChildren()\r\n\tchildren?: AuthAction[];\r\n\r\n\t@TreeParent()\r\n\tparent?: AuthAction;\r\n\r\n\tstatic allowedRoles = ['superadmin'];\r\n}\r\n","import { Column, Entity, OneToMany } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { AuthRolePermission } from './auth-role-permission';\r\n\r\n@Entity({\r\n\tname: 'auth_entity',\r\n\torderBy: {\r\n\t\taction: 'ASC'\r\n\t}\r\n})\r\nexport class AuthEntity extends BaseModel {\r\n\tstatic displayName = 'AuthAction';\r\n\r\n\t@Column({ nullable: true })\r\n\tentity?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\ttype?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tapplication?: string;\r\n\r\n\t@OneToMany((type) => AuthRolePermission, (authRolePermission) => authRolePermission.entity)\r\n\tauthRolePermissions?: AuthRolePermission[];\r\n\r\n\tstatic allowedRoles = ['superadmin'];\r\n}\r\n","import { Column, Entity, ManyToOne } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { AuthAction } from './auth-action';\r\nimport { AuthEntity } from './auth-entity';\r\nimport { AuthRole } from './auth-role';\r\n\r\n@Entity({\r\n\tname: 'auth_role_permission'\r\n})\r\nexport class AuthRolePermission extends BaseModel {\r\n\tstatic displayName = 'AuthRoleAction';\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tallowed: boolean;\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tcanCreate?: boolean;\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tcanRead?: boolean;\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tcanUpdate?: boolean;\r\n\r\n\t@Column({ nullable: true, default: false })\r\n\tcanDelete?: boolean;\r\n\r\n\t@ManyToOne((type) => AuthAction, (authAction) => authAction.authRolePermissions)\r\n\taction?: AuthAction;\r\n\r\n\t@ManyToOne((type) => AuthEntity, (authEntity) => authEntity.authRolePermissions)\r\n\tentity?: AuthEntity;\r\n\r\n\t@ManyToOne((type) => AuthRole, (authRole) => authRole.authRolePermissions)\r\n\trole?: AuthRole;\r\n\r\n\tstatic allowedRoles = ['superadmin'];\r\n}\r\n","import { Column, Entity, JoinTable, ManyToMany, OneToMany, Unique } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { AuthRolePermission } from './auth-role-permission';\r\nimport { User } from './user';\r\n\r\n@Entity({\r\n\tname: 'auth_role',\r\n\torderBy: {\r\n\t\trole: 'ASC'\r\n\t}\r\n})\r\n@Unique(['role'])\r\nexport class AuthRole extends BaseModel {\r\n\tstatic displayName = 'AuthRole';\r\n\r\n\t@Column({ nullable: true })\r\n\trole?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\ttype?: string;\r\n\r\n\t@OneToMany((type) => AuthRolePermission, (authRolePermission) => authRolePermission.role)\r\n\tauthRolePermissions?: AuthRolePermission[];\r\n\r\n\t@ManyToMany((type) => User, (user) => user.roles, {\r\n\t\tonDelete: 'SET NULL'\r\n\t})\r\n\t@JoinTable()\r\n\tusers?: User[];\r\n\r\n\tstatic allowedRoles = ['superadmin'];\r\n\r\n\t// static relationships = [{ model: User, name: 'users', ignoreSubRelations: true }];\r\n}\r\n","import { Column, Entity, ManyToMany, Unique } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { AuthRole } from './auth-role';\r\n\r\n@Entity({\r\n\tname: 'auth_user',\r\n\torderBy: {\r\n\t\tusername: 'ASC'\r\n\t}\r\n})\r\n@Unique(['username'])\r\nexport class User extends BaseModel {\r\n\tstatic displayName = 'User';\r\n\r\n\tconstructor(props?: User) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\t@Column()\r\n\tusername?: string;\r\n\r\n\t@Column()\r\n\tpassword?: string;\r\n\r\n\t@Column({\r\n\t\tnullable: true,\r\n\r\n\t\tlength: 255\r\n\t})\r\n\temail?: string;\r\n\r\n\t@Column({\r\n\t\tnullable: true,\r\n\t\tdefault: 0\r\n\t})\r\n\tnumSuccessfulLogin?: number;\r\n\r\n\t@Column({\r\n\t\tnullable: true,\r\n\t\tdefault: 0\r\n\t})\r\n\tnumFailedLogin?: number;\r\n\r\n\t@Column({ nullable: true })\r\n\tlastLoggedInDate?: Date;\r\n\r\n\t@Column({ default: false })\r\n\tisLocked?: boolean;\r\n\r\n\t@ManyToMany((type) => AuthRole, (role) => role.users, { eager: true, cascade: true })\r\n\troles?: AuthRole[];\r\n\r\n\tjwt?: string;\r\n\texpiry?: Date;\r\n\r\n\tstatic relationships = [{ model: AuthRole, name: 'roles' }];\r\n}\r\n","import {\r\n\tColumn,\r\n\tConnection,\r\n\tCreateDateColumn,\r\n\tPrimaryGeneratedColumn,\r\n\tUpdateDateColumn,\r\n\tVersionColumn\r\n} from 'typeorm';\r\n\r\nexport interface EntityTransaction {\r\n\trelationships?: { model: any; name: string; ignoreSubRelations: boolean } | string[];\r\n\tloadAfterCreate?: boolean;\r\n\r\n\tpreProcess?: (entity: any, dbConnection: Connection) => void;\r\n\tpostProcess?: (entity: any, dbConnection: Connection) => void;\r\n}\r\n\r\nexport interface EntityFieldConfig {\r\n\tkey: string;\r\n\tlabel?: string;\r\n\ttype?: string;\r\n\tclassName?: string;\r\n\tplaceholder?: string;\r\n\ttooltip?: string;\r\n\trequired?: string;\r\n\tdefaultValue?: any;\r\n\tvisible?: boolean;\r\n\torder?: number;\r\n\toptions?: any[];\r\n\toptionLabel?: string;\r\n}\r\n\r\nexport abstract class BaseModel implements EntityTransaction {\r\n\tconstructor(props?: any) {\r\n\t\tif (!props) return;\r\n\r\n\t\tObject.keys(props).forEach((prop) => {\r\n\t\t\tconst value = props[prop];\r\n\t\t\tthis[prop] = value;\r\n\t\t});\r\n\t}\r\n\r\n\t@PrimaryGeneratedColumn('uuid')\r\n\tid?: string;\r\n\r\n\t@VersionColumn({\r\n\t\tnullable: true\r\n\t})\r\n\tversion?: string;\r\n\r\n\t@CreateDateColumn()\r\n\tcreateDate?: Date;\r\n\r\n\t@UpdateDateColumn()\r\n\tmodifyDate?: Date;\r\n\r\n\t@Column({\r\n\t\tnullable: true\r\n\t})\r\n\tcreateUser?: string;\r\n\r\n\t@Column({\r\n\t\tnullable: true\r\n\t})\r\n\tmodifyUser?: string;\r\n\r\n\t// Properties\r\n\tstatic displayName?: string;\r\n\tstatic repoType?: string;\r\n\r\n\tstatic fieldConfig?: EntityFieldConfig[];\r\n\r\n\tstatic allowedRoles?: string[];\r\n\r\n\tstatic relationships?: any[];\r\n\tloadAfterCreate?: boolean;\r\n\r\n\t_tempId?: string;\r\n}\r\n","export const ignoreProps = [\r\n\t'id',\r\n\t'version',\r\n\t'createDate',\r\n\t'modifyDate',\r\n\t'createUser',\r\n\t'modifyUser',\r\n\t'displayName',\r\n\t'repoType',\r\n\t'allowedRoles',\r\n\t'relationships',\r\n\t'loadAfterSave',\r\n\t'_tempId'\r\n];\r\n","import { EntityFieldConfig } from './../base';\r\nimport { Column, Entity, OneToMany } from 'typeorm';\r\n\r\nimport { Picture } from '../_common/picture';\r\nimport { BaseModel } from '../base';\r\nimport { KMTransaction } from './km-transaction';\r\n\r\n@Entity()\r\nexport class Kid extends BaseModel {\r\n\tstatic displayName = 'Kid';\r\n\r\n\t@Column({ nullable: true })\r\n\tfirstName: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tlastName?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tmiddleName?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tfullName?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tbirthday?: Date;\r\n\r\n\t@Column({ nullable: true })\r\n\tgender?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tnotes?: string;\r\n\r\n\t@Column({ nullable: true, type: 'float4' })\r\n\tmoney?: number;\r\n\r\n\t@OneToMany((type) => KMTransaction, (kmTransaction) => kmTransaction.kid, { cascade: true })\r\n\ttransactions?: KMTransaction[];\r\n\r\n\t@OneToMany((type) => Picture, (picture) => picture.kid, { eager: true, cascade: true })\r\n\tpictures?: Picture[];\r\n\r\n\tstatic relationships = [\r\n\t\t{ model: KMTransaction, name: 'transactions' },\r\n\t\t{ model: Picture, name: 'pictures' }\r\n\t];\r\n\r\n\tstatic async preProcess?(entity, dbConnection) {\r\n\t\tif (entity.firstName || entity.middleName || entity.lastName) {\r\n\t\t\tentity.fullName = Kid.getKidFullName(entity);\r\n\t\t} else if (entity.fullName) {\r\n\t\t\tconst nameSplit = entity.name.split(' ');\r\n\t\t\tentity.firstName = nameSplit[0];\r\n\t\t\tif (nameSplit.length > 2) {\r\n\t\t\t\tentity.middleName = nameSplit[1];\r\n\t\t\t\tfor (let i = 2; i < nameSplit.length; i++) {\r\n\t\t\t\t\tentity.lastName += nameSplit[i];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tentity.lastName = nameSplit[1];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getKidFullName(kid: Kid) {\r\n\t\treturn `${kid.firstName || ''}${kid.firstName ? ' ' : ''}${kid.middleName || ''}${\r\n\t\t\tkid.middleName ? ' ' : ''\r\n\t\t}${kid.lastName || ''}`;\r\n\t}\r\n\r\n\tstatic fieldConfig: EntityFieldConfig[] = [\r\n\t\t{ key: 'firstName' },\r\n\t\t{ key: 'middleName' },\r\n\t\t{ key: 'lastName' },\r\n\t\t{ key: 'birthday', type: 'date' },\r\n\t\t{ key: 'gender' },\r\n\t\t{ key: 'notes', label: 'Notes', type: 'textarea' },\r\n\t\t{ key: 'money' },\r\n\t\t// { key: 'transactions', type: 'array' },\r\n\t];\r\n}\r\n","import { Column, Entity, ManyToOne, OneToMany } from 'typeorm';\r\n\r\nimport { BaseModel } from '../base';\r\nimport { Picture } from './../_common/picture';\r\nimport { EntityFieldConfig } from './../base';\r\nimport { Kid } from './kid';\r\n\r\n@Entity()\r\nexport class KMTransaction extends BaseModel {\r\n\tstatic displayName = 'KMTransaction';\r\n\r\n\t@Column({ nullable: true })\r\n\tname?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\ttype?: string;\r\n\r\n\t@Column({ nullable: true })\r\n\tincome?: number;\r\n\r\n\t@Column({ nullable: true })\r\n\tcost?: number;\r\n\r\n\t@Column({ nullable: true })\r\n\tpreviousAmount?: number;\r\n\r\n\t@Column({ nullable: true })\r\n\tnewAmount?: number;\r\n\r\n\t@Column({ nullable: true })\r\n\ttransactionDate?: Date;\r\n\r\n\t@OneToMany((type) => Picture, (picture) => picture.kmTransaction)\r\n\tpictures?: Picture[];\r\n\r\n\t@ManyToOne((type) => Kid, (kid) => kid.transactions)\r\n\tkid?: Kid;\r\n\r\n\t// OTHER\r\n\tstatic fieldConfig: EntityFieldConfig[] = [\r\n\t\t{ key: 'name', label: 'Transaction Name', type: 'input' },\r\n\t\t{ key: 'transactionDate', label: 'Date of Transaction', type: 'date' },\r\n\t\t{ key: 'cost', label: 'Cost', type: 'input' },\r\n\t\t{ key: 'income', label: 'Income', type: 'input' },\r\n\t\t{ key: 'type', label: 'Type', type: 'input' }\r\n\t\t// { key: 'pictures', type: 'array' }\r\n\t];\r\n}\r\n","import { checkUserRole } from './checkUserRole';\r\n\r\nexport const checkModelAllowedRoles = (model: any, userJwt: any) => {\r\n\tif (model.allowedRoles && model.allowedRoles.length) {\r\n\t\treturn checkUserRole(userJwt, model.allowedRoles);\r\n\t} else {\r\n\t\treturn true;\r\n\t}\r\n};\r\n","import { User } from './../../../../entities/auth/user';\r\n\r\nexport const checkUserRole = (user?: User, expectedRoles?: string[]): boolean => {\r\n\tif (!user || !expectedRoles) return true;\r\n\r\n\tconst expectedRolesLower: string[] = expectedRoles.map((er) =>\r\n\t\ter.toLowerCase().trim().split(' ').join('')\r\n\t);\r\n\tconst userRolesLower: string[] = (user.roles || []).map((r) =>\r\n\t\tr.role.toLowerCase().trim().split(' ').join('')\r\n\t);\r\n\r\n\treturn (\r\n\t\texpectedRoles.includes('*') || userRolesLower.some((r) => expectedRolesLower.includes(r))\r\n\t);\r\n};\r\n","export const getUniqueValues = (array: any[], prop: string): any[] => {\r\n\treturn Array.from(new Set(array.map((item) => item[prop]))).sort();\r\n};\r\n","module.exports = require(\"bcryptjs\");","module.exports = require(\"body-parser\");","module.exports = require(\"chalk\");","module.exports = require(\"compression\");","module.exports = require(\"cors\");","module.exports = require(\"date-fns\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"express-fileupload\");","module.exports = require(\"fs\");","module.exports = require(\"generate-password\");","module.exports = require(\"helmet\");","module.exports = require(\"http-proxy-middleware\");","module.exports = require(\"https\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mkdirp\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"reflect-metadata\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");"],"sourceRoot":""}